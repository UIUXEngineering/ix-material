import { createFeatureSelector, createSelector } from '@ngrx/store';
import * as fromReducer from './<%= fileName %>.reducer';

const {
  selectIds,
  selectEntities,
  selectAll,
  selectTotal
} = fromReducer.<%= propertyName %>Adapter.getSelectors();

export const getSelect<%= className %>State = createFeatureSelector<fromReducer.<%= className %>State>(
 fromReducer.<%= className.toUpperCase() %>_FEATURE_KEY
);

// select the array of <%= propertyName %> ids
export const select<%= className %>Ids = createSelector(
  getSelect<%= className %>State,
  selectIds // shorthand for usersState => fromReducer.selectUserIds(usersState)
);

// select the dictionary of <%= propertyName %> entities
export const select<%= className %>Entities = createSelector(
  getSelect<%= className %>State,
  selectEntities
);

// select the array of <%= propertyName %>s
export const selectAll<%= className %>s = createSelector(
  getSelect<%= className %>State,
  selectAll
);

// select the total <%= propertyName %> count
export const select<%= className %>Total = createSelector(
  getSelect<%= className %>State,
  selectTotal
);

export const selectCurrent<%= className %>Id = createSelector(
  getSelect<%= className %>State,
  (state: fromReducer.ChatState) => state.selectedId
);

export const selectCurrent<%= className %> = createSelector(
  getSelect<%= className %>State,
  selectCurrent<%= className %>Id,
  (<%= propertyName %>Entities, <%= propertyName %>) => <%= propertyName %>Entities[<%= propertyName %>]
);

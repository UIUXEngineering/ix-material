var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractSPWindowRef.html",[0,0.237,1,1.646]],["body/classes/AbstractSPWindowRef.html",[0,0.289,1,2.334,2,1.404,3,0.369,4,0.31,5,0.254,6,1.358,7,1.226,8,0.432,9,2.319,10,2.948,11,1.626,12,0.841,13,2.375,14,0.783,15,0.05,16,1.06,17,2.319,18,0.654,19,1.924,20,1.583,21,3.688,22,2.744,23,0.669,24,0.574,25,2.002,26,1.304,27,1.924,28,1.078,29,1.078,30,1.924,31,1.2,32,1.924,33,1.924,34,1.924,35,1.088,36,1.404,37,0.831,38,1.626,39,2.744,40,1.226,41,1.078,42,0.952,43,1.924,44,1.358,45,1.924,46,1.924,47,1.358,48,1.924,49,2.319,50,1.078,51,1.924,52,1.924,53,1.924,54,1.924,55,1.924,56,1.924,57,1.924,58,1.924,59,1.924,60,1.924,61,2.744,62,1.924,63,1.924,64,1.924,65,3.199,66,1.924,67,1.626,68,3.199,69,1.538,70,1.924,71,2.744,72,1.078,73,1.924,74,0.743,75,2.039,76,1.924,77,1.924,78,1.924,79,2.002,80,1.924,81,1.924,82,1.924,83,1.924,84,2.744,85,1.924,86,1.924,87,2.744,88,2.744,89,3.488,90,2.744,91,1.924,92,1.924,93,1.626,94,1.924,95,1.626,96,1.924,97,2.744,98,2.744,99,1.924,100,1.924,101,1.924,102,1.626,103,1.626,104,1.924,105,0.841,106,1.924,107,1.924,108,1.924,109,1.924,110,0.02,111,0.029,112,0.02]],["title/interfaces/CheckContentConfig.html",[113,0.986,114,0.986]],["body/interfaces/CheckContentConfig.html",[0,0.179,3,0.326,4,0.274,5,0.225,8,0.382,14,0.563,15,0.05,20,0.841,23,0.571,24,0.507,26,0.853,35,1.014,37,0.856,44,1.818,47,1.475,50,0.953,69,0.953,72,0.953,74,0.969,75,1.084,105,1.304,110,0.032,111,0.027,112,0.018,113,1.097,114,1.439,115,1.24,116,0.743,117,1.467,118,1.084,119,1.084,120,1.241,121,2.681,122,2.562,123,2.681,124,2.997,125,0.889,126,2.175,127,2.402,128,2.52,129,2.12,130,1.437,131,1.437,132,2.967,133,3.212,134,1.599,135,1.24,136,1.83,137,0.841,138,1.437,139,1.437,140,1.437,141,1.084,142,1.084,143,1.084,144,1.9,145,1.437,146,1.437,147,1.084,148,1.24,149,1.437,150,1.437,151,1.437,152,2.12,153,1.437,154,1.24,155,1.24,156,1.437,157,2.12,158,1.437,159,1.437,160,2.12,161,1.437,162,1.437,163,1.437,164,2.12,165,1.437,166,1.437,167,1.437,168,1.437,169,1.437,170,1.437,171,1.437,172,1.437,173,1.437,174,2.12,175,1.437,176,1.845,177,1.437,178,1.24,179,1.437,180,3.105,181,1.437,182,0.841,183,2.52,184,1.24,185,1.437,186,1.437,187,1.437,188,2.12,189,1.437,190,1.437,191,2.52,192,1.084,193,1.084,194,1.437,195,1.437,196,1.437,197,1.437,198,2.12,199,1.437]],["title/classes/CheckContentLoaded.html",[0,0.237,137,1.116]],["body/classes/CheckContentLoaded.html",[0,0.139,2,0.963,3,0.253,4,0.212,5,0.175,8,0.296,12,1.689,14,0.465,15,0.049,20,0.653,23,0.489,24,0.394,26,0.704,31,0.905,35,0.868,37,0.865,44,1.942,47,1.429,50,1.16,69,0.74,72,0.74,74,1.285,75,0.841,105,1.263,110,0.027,111,0.022,112,0.014,113,0.905,114,1.372,116,1.717,117,1.699,118,2.502,119,0.841,120,1.024,121,1.862,122,1.509,123,1.862,124,2.429,125,0.993,126,2.289,127,2.429,128,2.157,129,1.749,130,1.115,131,1.115,132,2.813,133,3.203,134,1.319,135,0.963,136,1.509,137,1.024,138,2.157,139,2.157,140,2.157,141,1.319,142,1.626,143,1.626,144,2,145,1.115,146,1.749,147,1.319,148,1.509,149,1.749,150,1.749,151,1.749,152,2.157,153,1.749,154,1.509,155,1.509,156,2.441,157,1.749,158,1.115,159,1.115,160,1.749,161,1.115,162,1.115,163,1.115,164,1.749,165,1.115,166,1.115,167,1.115,168,1.115,169,1.115,170,1.115,171,1.115,172,1.115,173,1.115,174,1.749,175,1.749,176,2.019,177,1.115,178,1.509,179,2.441,180,2.813,181,1.115,182,1.429,183,2.157,184,2.108,185,1.115,186,1.115,187,2.441,188,1.749,189,1.115,190,1.115,191,2.157,192,0.841,193,0.841,194,1.115,195,1.115,196,1.115,197,1.115,198,1.749,199,1.115,200,1.024,201,2.554,202,1.629,203,2.554,204,1.024,205,0.799,206,1.32,207,1.629,208,1.626,209,1.626,210,1.629,211,1.629,212,1.629,213,1.455,214,1.629,215,1.629,216,1.629,217,1.629,218,1.629]],["title/interfaces/Content.html",[113,0.986,117,0.871]],["body/interfaces/Content.html",[0,0.182,3,0.331,4,0.278,5,0.228,8,0.388,14,0.57,15,0.05,20,0.854,23,0.577,24,0.515,26,0.863,35,1.023,37,0.862,44,1.828,47,1.489,50,0.968,69,0.968,72,0.968,74,0.98,75,1.918,105,1.316,110,0.032,111,0.027,112,0.018,113,1.11,114,1.316,115,1.26,116,0.755,117,1.513,118,1.101,119,1.101,120,1.256,121,2.195,122,1.852,123,2.195,124,2.578,125,0.757,126,2.195,127,2.42,128,2.543,129,2.145,130,1.46,131,1.46,132,3.311,133,3.436,134,1.618,135,1.26,136,1.852,137,0.854,138,1.46,139,1.46,140,1.46,141,1.101,142,1.101,143,1.101,144,1.918,145,1.46,146,1.46,147,1.101,148,1.26,149,1.46,150,1.46,151,1.46,152,2.145,153,1.46,154,1.26,155,1.26,156,1.46,157,2.145,158,1.46,159,1.46,160,2.145,161,1.46,162,1.46,163,1.46,164,2.145,165,1.46,166,1.46,167,1.46,168,1.46,169,1.46,170,1.46,171,1.46,172,1.46,173,1.46,174,2.145,175,1.46,176,1.859,177,1.46,178,1.26,179,1.46,180,3.123,181,1.46,182,0.854,183,2.543,184,1.26,185,1.46,186,1.46,187,1.46,188,2.145,189,1.46,190,1.46,191,2.543,192,1.101,193,1.101,194,1.46,195,1.46,196,1.46,197,1.46,198,2.145,199,1.46]],["title/modules/ContentLoadedModule.html",[219,1.116,220,1.646]],["body/modules/ContentLoadedModule.html",[0,0.344,3,0.475,4,0.399,5,0.328,12,1.084,14,0.733,15,0.049,16,1.261,18,0.843,23,0.744,24,0.739,26,1.242,35,0.843,37,1.009,40,1.58,41,1.39,74,0.957,110,0.026,111,0.035,112,0.026,114,1.428,116,1.428,117,1.41,137,1.807,141,2.082,142,1.58,143,2.328,144,2.082,147,1.58,192,1.58,193,1.58,200,1.226,205,1.261,213,1.084,220,2.665,221,1.226,222,2.082,223,1.58,224,3.652,225,3.652,226,3.061,227,2.328,228,2.383,229,2.322,230,3.265,231,2.095,232,2.479,233,2.76,234,2.479,235,2.095,236,2.383,237,1.58,238,1.809,239,1.809,240,1.58,241,2.082]],["title/injectables/ContentLoadedService.html",[16,0.871,229,1.264]],["body/injectables/ContentLoadedService.html",[0,0.329,3,0.445,4,0.374,5,0.307,8,0.521,12,1.014,14,0.702,15,0.049,16,1.207,18,0.789,23,0.725,24,0.692,26,1.202,31,1.014,35,0.789,37,0.983,40,1.479,41,1.301,74,1.364,110,0.025,111,0.033,112,0.025,114,1.653,116,1.366,117,1.364,125,0.692,137,1.953,141,2.252,142,2.252,143,2.515,144,2.41,147,1.992,192,1.479,193,1.479,200,1.546,204,1.148,205,1.364,206,2.32,213,1.014,220,2.28,222,1.992,223,1.479,224,3.78,225,2.32,227,2.252,228,2.28,229,2.329,230,3.946,231,2.641,232,3.125,233,2.641,234,2.32,235,1.961,236,2.28,237,1.479,238,1.693,239,1.693,240,1.479,241,1.992,242,1.693,243,2.865,244,2.865]],["title/interfaces/DomRectPosition.html",[113,0.986,245,1.646]],["body/interfaces/DomRectPosition.html",[3,0.454,4,0.382,5,0.314,8,0.532,15,0.049,23,0.685,24,0.707,26,0.806,35,0.806,79,3.048,105,1.856,110,0.025,111,0.034,112,0.025,113,1.037,115,1.73,120,1.569,124,3.349,125,1.266,245,2.607,246,1.73,247,4.177,248,4.177,249,4.177,250,4.177,251,4.177,252,4.177,253,4.177,254,2.004,255,3.17,256,2.371,257,2.004]],["title/components/IxOnRenderCompleteComponent.html",[258,1.437,259,1.437]],["body/components/IxOnRenderCompleteComponent.html",[0,0.232,3,0.422,4,0.354,5,0.291,8,0.494,12,1.503,14,0.677,15,0.048,18,0.748,23,0.422,28,1.233,29,1.233,31,1.503,47,1.492,50,1.233,74,1.164,110,0.023,111,0.032,112,0.023,125,0.899,154,1.605,155,2.2,176,1.69,178,2.509,200,1.492,204,1.089,205,0.85,213,0.962,258,2.192,259,2.358,260,3.722,261,2.717,262,2.717,263,2.717,264,2.073,265,2.509,266,2.073,267,2.2,268,3.722,269,4.246,270,2.717,271,3.722,272,3.722,273,3.722,274,3.722,275,3.722,276,3.577,277,3.438,278,3.722,279,4.246,280,3.722,281,3.722,282,4.567,283,3.722,284,4.246,285,2.717,286,2.073,287,3.722,288,3.722,289,2.717,290,2.717,291,3.722,292,2.717,293,2.2,294,1.605,295,2.717,296,2.717,297,2.717,298,1.605,299,3.722,300,2.717,301,4.567,302,2.717,303,2.717,304,2.717]],["title/modules/IxOnRenderCompleteModule.html",[219,1.116,305,1.646]],["body/modules/IxOnRenderCompleteModule.html",[0,0.293,3,0.533,4,0.448,5,0.368,14,0.91,15,0.048,18,0.946,23,0.533,110,0.029,111,0.037,112,0.029,182,1.376,219,1.376,221,1.376,227,2.242,241,2.242,259,2.877,264,1.559,265,2.273,266,1.559,276,2.973,293,2.781,298,2.03,305,3.166,306,1.559,307,3.261,308,2.351,309,3.261,310,2.781,311,2.781,312,2.781,313,2.973,314,2.351,315,3.435,316,2.973,317,2.03,318,2.567,319,3.435,320,2.351]],["title/injectables/IxOnRenderCompleteService.html",[16,0.871,286,1.264]],["body/injectables/IxOnRenderCompleteService.html",[0,0.193,3,0.351,4,0.295,5,0.243,8,0.412,12,1.65,14,0.699,15,0.049,16,1.024,18,0.624,20,0.907,23,0.597,24,0.547,26,1.059,28,1.028,29,1.028,31,1.583,35,0.624,37,0.887,40,1.169,41,1.028,44,1.867,69,1.028,74,1.668,110,0.019,111,0.028,112,0.019,120,1.312,125,1.125,126,2.272,127,2.272,148,1.935,176,1.746,182,1.312,184,1.935,200,1.312,204,1.791,205,1.502,208,1.169,209,1.169,213,1.583,228,1.935,233,1.55,237,1.169,238,1.338,239,1.338,242,1.338,264,2.181,265,2.406,266,2.181,277,2.651,286,2.181,294,1.338,318,1.338,321,1.338,322,3.845,323,3.274,324,3.274,325,3.274,326,2.264,327,4.659,328,3.274,329,2.264,330,3.274,331,2.264,332,3.274,333,3.274,334,3.274,335,3.274,336,3.274,337,2.264,338,3.274,339,2.264,340,2.264,341,2.264,342,2.264,343,2.264,344,2.264,345,2.264,346,2.264,347,2.264,348,2.264,349,2.264,350,4.213,351,2.264,352,1.935,353,2.651]],["title/modules/IxWindowRefModule.html",[219,1.116,354,1.646]],["body/modules/IxWindowRefModule.html",[0,0.3,3,0.547,4,0.46,5,0.378,6,1.412,14,0.877,15,0.049,18,0.971,23,0.547,42,2.128,110,0.03,111,0.038,112,0.03,182,1.412,219,1.412,221,1.412,227,2.279,241,2.489,298,2.083,306,1.6,307,2.413,308,2.413,309,3.022,313,3.022,314,2.413,316,3.022,317,2.083,320,2.413,354,3.138,355,2.854,356,2.854,357,3.525,358,3.525,359,3.525,360,3.525,361,3.525,362,3.525,363,3.525,364,2.854,365,2.854]],["title/injectables/IxWindowRefService.html",[16,0.871,42,1.116]],["body/injectables/IxWindowRefService.html",[0,0.259,1,2.141,3,0.317,4,0.266,5,0.219,6,1.991,7,1.054,8,0.371,9,2.078,10,2.745,11,1.398,12,1.729,14,0.729,15,0.049,16,0.949,17,2.078,18,0.563,19,1.654,20,1.452,21,3.766,22,2.933,23,0.623,24,0.493,25,1.794,26,1.237,27,1.654,28,0.927,29,0.927,30,1.654,31,1.283,32,1.654,33,1.654,34,1.654,35,0.998,36,1.207,37,0.763,38,1.398,39,2.458,40,1.054,41,0.927,42,1.216,43,2.458,44,1.8,45,2.933,46,2.933,47,1.452,48,2.933,49,2.745,50,1.645,51,1.654,52,1.654,53,1.654,54,1.654,55,1.654,56,1.654,57,1.654,58,1.654,59,1.654,60,1.654,61,2.458,62,1.654,63,1.654,64,1.654,65,2.933,66,1.654,67,1.398,68,2.933,69,1.378,70,1.654,71,2.458,72,0.927,73,2.458,74,1.133,75,2.318,76,1.654,77,1.654,78,1.654,79,1.794,80,1.654,81,1.654,82,1.654,83,1.654,84,2.458,85,1.654,86,1.654,87,2.458,88,2.458,89,3.248,90,2.458,91,1.654,92,1.654,93,1.398,94,1.654,95,1.398,96,1.654,97,2.458,98,2.458,99,1.654,100,1.654,101,1.654,102,1.398,103,1.398,104,1.654,105,0.723,106,3.248,107,1.654,108,3.248,109,1.654,110,0.017,111,0.026,112,0.017,120,1.216,125,1.035,200,1.216,204,0.818,205,0.639,208,1.054,209,1.054,213,1.283,242,1.207,366,3.035,367,3.035,368,2.042,369,2.042,370,2.042,371,2.042,372,2.042,373,2.042,374,2.042]],["title/classes/MockSpWindow.html",[0,0.237,375,1.906]],["body/classes/MockSpWindow.html",[0,0.211,2,1.461,3,0.384,4,0.322,5,0.265,6,1.853,8,0.45,9,2.386,10,2.764,11,1.692,12,1.553,14,0.45,15,0.05,23,0.541,24,0.597,26,1.321,28,1.833,29,1.833,31,0.876,35,1.112,37,0.52,42,1.397,44,1.618,47,1.397,49,2.386,110,0.021,111,0.03,112,0.021,120,1.397,125,0.597,176,1.122,200,1.397,204,0.991,205,0.773,208,1.8,209,1.8,213,0.876,237,1.276,294,2.386,364,2.002,365,2.823,375,2.764,376,1.692,377,4.038,378,4.038,379,3.486,380,2.472,381,2.823,382,3.486,383,3.486,384,3.486,385,4.038,386,3.486,387,4.385,388,2.823,389,3.486,390,3.486,391,2.472,392,3.486,393,2.472,394,3.486,395,2.472,396,2.472,397,2.386,398,4.038,399,4.038,400,2.472,401,2.472]],["title/modules/ServicesModule.html",[219,1.116,402,1.906]],["body/modules/ServicesModule.html",[0,0.348,3,0.634,4,0.533,5,0.438,14,0.878,15,0.048,18,1.125,23,0.634,110,0.035,111,0.041,112,0.035,221,1.637,227,2.493,316,3.306,317,2.413,320,2.796,402,3.306,403,4.084]],["title/coverage.html",[404,3.065]],["body/coverage.html",[0,0.361,1,1.595,5,0.289,6,1.976,7,2.351,15,0.048,16,1.323,24,1.153,25,1.595,36,1.595,37,0.568,42,1.081,105,1.955,110,0.023,111,0.032,112,0.023,113,1.498,114,0.956,116,1.788,117,1.681,118,2.351,119,2.351,125,0.652,134,1.393,137,1.081,222,2.184,223,2.184,229,1.225,236,1.595,240,1.393,245,1.595,246,2.5,254,1.847,257,1.847,258,1.393,259,1.393,264,2.068,265,2.335,266,2.068,267,2.185,286,1.225,318,1.595,321,2.5,352,1.595,375,1.847,376,2.536,397,1.847,404,2.185,405,2.185,406,2.699,407,2.699,408,2.699,409,2.699,410,4.231,411,2.699,412,4.773,413,5.332,414,2.699,415,2.699,416,2.699,417,2.699,418,3.705,419,2.699,420,2.699]],["title/dependencies.html",[306,1.519,421,2.333]],["body/dependencies.html",[15,0.049,18,0.994,20,1.446,110,0.031,111,0.038,112,0.031,306,1.638,317,2.133,422,3.609,423,5.472,424,3.609,425,4.481,426,3.609,427,3.609,428,3.609,429,4.481,430,3.629,431,3.609,432,3.609,433,3.609,434,3.609,435,3.609,436,3.609,437,3.609,438,3.609,439,3.609,440,3.609,441,3.609,442,3.609,443,3.609,444,3.609,445,3.609,446,3.609,447,3.609,448,3.609,449,3.609,450,3.609,451,3.609]],["title/miscellaneous/functions.html",[452,1.379,453,2.709]],["body/miscellaneous/functions.html",[6,1.792,7,1.857,8,0.654,15,0.047,25,2.876,31,1.723,110,0.031,111,0.038,112,0.031,116,1.274,117,1.125,204,1.95,205,1.522,213,1.803,222,1.857,223,2.309,229,1.634,235,2.463,240,2.309,245,2.126,246,2.126,257,3.061,264,1.634,265,2.209,266,1.634,286,1.634,321,2.643,352,2.643,353,2.914,376,2.463,397,3.331,452,2.126,453,2.914,454,2.914,455,2.914,456,2.914,457,3.598,458,2.914,459,3.598,460,3.598]],["title/index.html",[8,0.424,461,2.333,462,2.333]],["body/index.html",[4,0.244,5,0.201,15,0.029,37,0.395,41,1.292,67,2.355,93,1.948,95,1.283,102,1.283,103,1.283,110,0.016,111,0.024,112,0.016,231,1.283,258,1.776,276,1.283,306,0.851,381,3.659,388,1.518,405,2.786,463,3.44,464,3.842,465,3.842,466,2.846,467,2.846,468,4.942,469,3.44,470,1.875,471,3.842,472,2.846,473,1.875,474,1.875,475,1.875,476,1.875,477,4.656,478,1.875,479,1.875,480,1.875,481,1.875,482,1.875,483,1.875,484,3.842,485,5.069,486,2.846,487,1.875,488,4.519,489,1.875,490,1.875,491,1.875,492,1.875,493,1.875,494,1.875,495,1.875,496,1.875,497,1.875,498,1.875,499,1.875,500,1.875,501,1.875,502,2.846,503,1.875,504,1.875,505,1.875,506,1.875,507,1.875,508,1.875,509,1.875,510,1.875,511,4.131,512,1.875,513,1.875,514,1.875,515,1.875,516,1.875,517,1.875,518,1.875,519,1.875,520,3.842,521,1.875,522,1.875,523,1.875,524,2.846,525,1.875,526,1.875,527,1.875,528,1.875,529,1.875,530,1.875,531,4.131,532,4.131,533,1.875,534,2.846,535,1.875,536,1.875,537,1.875,538,2.846,539,1.875,540,3.842,541,1.875,542,1.875,543,3.44,544,1.875,545,1.875,546,1.875,547,1.875,548,1.875,549,1.875,550,1.875,551,1.875,552,2.846,553,4.862,554,1.875,555,1.875,556,1.875,557,2.846,558,2.846,559,1.875,560,1.875,561,1.875,562,1.875,563,1.875,564,1.875,565,1.875,566,1.875,567,1.875,568,1.875,569,1.875,570,3.44,571,3.842,572,1.875,573,1.875,574,3.842,575,4.656,576,1.875,577,2.846,578,1.875,579,4.131,580,1.875,581,1.875,582,4.131,583,1.875,584,1.875,585,1.875,586,1.875,587,5.069,588,1.875,589,1.875,590,1.875,591,1.875,592,1.875,593,1.875,594,1.875,595,1.875,596,1.875,597,1.875,598,1.875,599,1.875,600,1.875,601,4.519,602,2.846,603,3.44,604,1.875,605,2.846,606,1.875,607,1.875,608,2.846,609,1.875,610,1.875,611,1.875,612,1.875,613,1.875,614,1.875,615,2.846,616,1.875,617,1.875,618,1.875,619,1.875,620,3.44,621,1.875,622,1.875,623,1.875,624,1.875,625,1.875,626,1.875,627,3.44,628,4.349,629,3.842,630,2.846,631,1.875,632,1.875,633,2.846,634,4.349,635,1.875,636,1.875,637,1.875,638,1.875,639,1.875,640,1.518,641,1.875,642,1.875,643,1.875,644,1.875,645,1.875,646,1.875]],["title/modules.html",[221,1.517]],["body/modules.html",[15,0.042,110,0.036,111,0.042,112,0.036,220,2.455,221,1.665,305,2.455,354,2.455,402,2.844,430,3.951,640,3.951,647,4.879,648,5.344,649,4.879,650,4.879]],["title/overview.html",[651,3.065]],["body/overview.html",[2,2.226,15,0.045,42,1.99,110,0.032,111,0.039,112,0.032,115,2.226,182,1.509,219,1.509,221,1.509,241,1.944,242,2.226,258,1.944,259,2.821,298,2.226,305,3.135,306,1.71,307,2.578,308,2.578,309,2.578,310,3.05,311,3.05,312,3.05,313,3.149,314,2.578,354,3.057,355,3.05,356,3.05,651,3.05,652,3.766,653,3.766,654,4.967]],["title/miscellaneous/variables.html",[452,1.379,655,2.709]],["body/miscellaneous/variables.html",[6,1.202,7,1.549,8,0.546,15,0.049,17,2.054,28,1.362,29,1.362,36,2.352,37,1.042,38,2.054,72,1.362,79,1.773,105,1.866,110,0.026,111,0.034,112,0.026,114,1.062,116,1.409,117,1.487,118,1.549,119,2.054,121,1.773,122,1.773,123,1.773,125,1.195,134,2.054,135,1.773,136,1.773,205,1.244,208,2.555,209,2.555,222,1.549,223,2.054,228,2.352,229,1.807,236,2.352,237,2.054,238,2.352,239,2.352,240,1.549,246,1.773,247,2.429,248,2.429,249,2.429,250,2.429,251,2.429,252,2.429,253,2.429,254,2.724,255,2.429,256,2.429,264,1.362,265,2.027,266,1.362,286,1.807,294,1.773,318,2.352,321,2.352,352,1.773,452,1.773,454,2.429,455,2.429,456,2.429,458,2.429,655,2.429,656,3]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":105,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":653,"title":{},"body":{"overview.html":{}}}],["1.4.0",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":562,"title":{},"body":{"index.html":{}}}],["100",{"_index":72,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxWindowRefService.html":{},"miscellaneous/variables.html":{}}}],["1014",{"_index":92,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["14",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["2.0.8",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":135,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":136,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"miscellaneous/variables.html":{}}}],["22",{"_index":91,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["3",{"_index":654,"title":{},"body":{"overview.html":{}}}],["4",{"_index":652,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":160,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["6.2.3",{"_index":484,"title":{},"body":{"index.html":{}}}],["6.2.4",{"_index":495,"title":{},"body":{"index.html":{}}}],["6.3.0yarn",{"_index":493,"title":{},"body":{"index.html":{}}}],["6.3.5",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["7.0.0yarn",{"_index":491,"title":{},"body":{"index.html":{}}}],["8",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["8.0.1yarn",{"_index":489,"title":{},"body":{"index.html":{}}}],["8.1.2",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["8.4.4",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["__storage_test__",{"_index":80,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["_cache",{"_index":322,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["_config",{"_index":144,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["_containerqueryselector",{"_index":143,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["_containers",{"_index":139,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["_contentloadedfactory",{"_index":240,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["_contentloadedfactory(a",{"_index":235,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"miscellaneous/functions.html":{}}}],["_document",{"_index":141,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["_getcache",{"_index":323,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["_getcache(key",{"_index":325,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["_globalsubscription",{"_index":45,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["_matchmedia",{"_index":377,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["_numberloaded",{"_index":138,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["_onrendercomplete",{"_index":288,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["_querydom",{"_index":187,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["_resizing",{"_index":46,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["_sponrendercompletefactory",{"_index":352,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["_sponrendercompletefactory(parentdispatcher",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_val",{"_index":394,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["_window",{"_index":25,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["_window()[type",{"_index":77,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["above",{"_index":605,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":39,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["abstractspwindowref",{"_index":1,"title":{"classes/AbstractSPWindowRef.html":{}},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{}}}],["accessors",{"_index":9,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["acknowledge",{"_index":100,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["actual_component",{"_index":304,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["add",{"_index":575,"title":{},"body":{"index.html":{}}}],["adding",{"_index":569,"title":{},"body":{"index.html":{}}}],["affected",{"_index":633,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":637,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":632,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":269,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["allow",{"_index":32,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["alpha",{"_index":497,"title":{},"body":{"index.html":{}}}],["alpha.1",{"_index":503,"title":{},"body":{"index.html":{}}}],["alpha.1yarn",{"_index":515,"title":{},"body":{"index.html":{}}}],["already",{"_index":65,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["angular",{"_index":586,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":317,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":18,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"modules/ServicesModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":477,"title":{},"body":{"index.html":{}}}],["appends",{"_index":500,"title":{},"body":{"index.html":{}}}],["application",{"_index":602,"title":{},"body":{"index.html":{}}}],["applications",{"_index":579,"title":{},"body":{"index.html":{}}}],["appreciated",{"_index":535,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":623,"title":{},"body":{"index.html":{}}}],["assets",{"_index":478,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":527,"title":{},"body":{"index.html":{}}}],["automate",{"_index":522,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":619,"title":{},"body":{"index.html":{}}}],["available",{"_index":647,"title":{},"body":{"modules.html":{}}}],["based",{"_index":483,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":126,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["behaviorsubject(false",{"_index":351,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["below",{"_index":585,"title":{},"body":{"index.html":{}}}],["beta",{"_index":498,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":504,"title":{},"body":{"index.html":{}}}],["beta.1yarn",{"_index":517,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxWindowRefService.html":{}}}],["bootstrap",{"_index":308,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["bottom",{"_index":247,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":648,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":430,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":381,"title":{},"body":{"classes/MockSpWindow.html":{},"index.html":{}}}],["build.projects",{"_index":537,"title":{},"body":{"index.html":{}}}],["bump",{"_index":486,"title":{},"body":{"index.html":{}}}],["bump.alpha",{"_index":514,"title":{},"body":{"index.html":{}}}],["bump.beta",{"_index":516,"title":{},"body":{"index.html":{}}}],["bump.major",{"_index":490,"title":{},"body":{"index.html":{}}}],["bump.minor",{"_index":492,"title":{},"body":{"index.html":{}}}],["bump.patch",{"_index":494,"title":{},"body":{"index.html":{}}}],["bump.rc",{"_index":518,"title":{},"body":{"index.html":{}}}],["bumping",{"_index":496,"title":{},"body":{"index.html":{}}}],["cache",{"_index":333,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["called",{"_index":148,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["capabilities",{"_index":570,"title":{},"body":{"index.html":{}}}],["case",{"_index":34,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["catch",{"_index":83,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["cd",{"_index":540,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":473,"title":{},"body":{"index.html":{}}}],["change",{"_index":620,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":271,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["changedetectionstrategy",{"_index":290,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":272,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["check",{"_index":192,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["checkcontentconfig",{"_index":114,"title":{"interfaces/CheckContentConfig.html":{}},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkcontentloaded",{"_index":137,"title":{"classes/CheckContentLoaded.html":{}},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{}}}],["checkcontentloaded(_document",{"_index":234,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["checkedcontentloaded",{"_index":156,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["childnodes",{"_index":133,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["children",{"_index":152,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractSPWindowRef.html":{},"classes/CheckContentLoaded.html":{},"classes/MockSpWindow.html":{}},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"classes/CheckContentLoaded.html":{},"classes/MockSpWindow.html":{},"overview.html":{}}}],["cluster_ixonrendercompletemodule",{"_index":310,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"overview.html":{}}}],["cluster_ixonrendercompletemodule_declarations",{"_index":311,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"overview.html":{}}}],["cluster_ixonrendercompletemodule_exports",{"_index":312,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"overview.html":{}}}],["cluster_ixwindowrefmodule",{"_index":355,"title":{},"body":{"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["cluster_ixwindowrefmodule_providers",{"_index":356,"title":{},"body":{"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["code",{"_index":95,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["commands",{"_index":466,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":316,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{}}}],["compare",{"_index":168,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["complete",{"_index":277,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["complete(key",{"_index":328,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.component",{"_index":319,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{}}}],["complete.component.html",{"_index":281,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["complete.component.scss",{"_index":279,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["complete.component.ts",{"_index":267,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"coverage.html":{}}}],["complete.component.ts:21",{"_index":287,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["complete.component.ts:25",{"_index":289,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["complete.module.ts",{"_index":315,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{}}}],["complete.service",{"_index":293,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{}}}],["complete.service.ts",{"_index":321,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["complete.service.ts:11",{"_index":337,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.service.ts:20",{"_index":329,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.service.ts:24",{"_index":339,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.service.ts:33",{"_index":331,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.service.ts:38",{"_index":326,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete.service.ts:9",{"_index":340,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["complete/ix",{"_index":266,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":258,"title":{"components/IxOnRenderCompleteComponent.html":{}},"body":{"components/IxOnRenderCompleteComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":302,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["components",{"_index":260,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["config",{"_index":158,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxWindowRefService.html":{}}}],["constructor(_document",{"_index":202,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["constructor(_onrendercomplete",{"_index":285,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["constructor(private",{"_index":295,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["consumer",{"_index":335,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["containercssclass",{"_index":284,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["containing",{"_index":544,"title":{},"body":{"index.html":{}}}],["contains",{"_index":481,"title":{},"body":{"index.html":{}}}],["content",{"_index":117,"title":{"interfaces/Content.html":{}},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["content_loaded_provider",{"_index":236,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentloaded",{"_index":140,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["contentloadedmodule",{"_index":220,"title":{"modules/ContentLoadedModule.html":{}},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"modules.html":{}}}],["contentloadedservice",{"_index":229,"title":{"injectables/ContentLoadedService.html":{}},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":359,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["core",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":404,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":231,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"index.html":{}}}],["createspwindowservicemock",{"_index":397,"title":{},"body":{"classes/MockSpWindow.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["criteria",{"_index":167,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["current",{"_index":501,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":636,"title":{},"body":{"index.html":{}}}],["d3",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":307,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["default",{"_index":208,"title":{},"body":{"classes/CheckContentLoaded.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["defaultresizeproperties",{"_index":254,"title":{},"body":{"interfaces/DomRectPosition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"classes/CheckContentLoaded.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["delay",{"_index":159,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["delete",{"_index":349,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["dep",{"_index":639,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":306,"title":{"dependencies.html":{}},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deps",{"_index":238,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"miscellaneous/variables.html":{}}}],["destroy",{"_index":184,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["destroy(key",{"_index":330,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["dev",{"_index":557,"title":{},"body":{"index.html":{}}}],["developing",{"_index":576,"title":{},"body":{"index.html":{}}}],["development",{"_index":614,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":584,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":642,"title":{},"body":{"index.html":{}}}],["different",{"_index":577,"title":{},"body":{"index.html":{}}}],["directive",{"_index":300,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["directives",{"_index":303,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["directory",{"_index":543,"title":{},"body":{"index.html":{}}}],["dist",{"_index":538,"title":{},"body":{"index.html":{}}}],["dist/@uiux/cdk",{"_index":547,"title":{},"body":{"index.html":{}}}],["dist/@uiux/material",{"_index":548,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":341,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["docs",{"_index":476,"title":{},"body":{"index.html":{}}}],["document",{"_index":142,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["documentation",{"_index":405,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":154,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{}}}],["domexception",{"_index":86,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["domrectposition",{"_index":245,"title":{"interfaces/DomRectPosition.html":{}},"body":{"interfaces/DomRectPosition.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["domrectreadonly",{"_index":255,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":84,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["e.code",{"_index":90,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["e.name",{"_index":97,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["e2e",{"_index":635,"title":{},"body":{"index.html":{}}}],["each",{"_index":541,"title":{},"body":{"index.html":{}}}],["element",{"_index":155,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{}}}],["encapsulation",{"_index":273,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["end",{"_index":634,"title":{},"body":{"index.html":{}}}],["engineering",{"_index":361,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["etc",{"_index":583,"title":{},"body":{"index.html":{}}}],["evaluates",{"_index":165,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["event",{"_index":61,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["everything",{"_index":87,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["except",{"_index":88,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["execute",{"_index":629,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{}}}],["exports",{"_index":309,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["express",{"_index":597,"title":{},"body":{"index.html":{}}}],["extends",{"_index":43,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["extensible",{"_index":556,"title":{},"body":{"index.html":{}}}],["factor",{"_index":526,"title":{},"body":{"index.html":{}}}],["factory",{"_index":230,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["factory(_document",{"_index":243,"title":{},"body":{"injectables/ContentLoadedService.html":{}}}],["false",{"_index":47,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["features",{"_index":566,"title":{},"body":{"index.html":{}}}],["field",{"_index":94,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":472,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["firebaseui",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["firefox",{"_index":89,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["first",{"_index":513,"title":{},"body":{"index.html":{}}}],["flag",{"_index":625,"title":{},"body":{"index.html":{}}}],["folder",{"_index":479,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":225,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["found",{"_index":196,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["framework",{"_index":592,"title":{},"body":{"index.html":{}}}],["fromevent",{"_index":19,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["fromevent(this.nativewindow",{"_index":57,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["frontends",{"_index":593,"title":{},"body":{"index.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"coverage.html":{}}}],["functions",{"_index":453,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":643,"title":{},"body":{"index.html":{}}}],["g",{"_index":603,"title":{},"body":{"index.html":{}}}],["ga",{"_index":382,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["generate",{"_index":601,"title":{},"body":{"index.html":{}}}],["generated",{"_index":551,"title":{},"body":{"index.html":{}}}],["generating",{"_index":581,"title":{},"body":{"index.html":{}}}],["getnativewindow",{"_index":11,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["getresizeproperties",{"_index":257,"title":{},"body":{"interfaces/DomRectPosition.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getresizeproperties(undefined",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":461,"title":{"index.html":{}},"body":{}}],["github",{"_index":529,"title":{},"body":{"index.html":{}}}],["given",{"_index":153,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["graph",{"_index":640,"title":{},"body":{"index.html":{},"modules.html":{}}}],["hammerjs",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":248,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":534,"title":{},"body":{"index.html":{}}}],["href",{"_index":389,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["html",{"_index":299,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["http://localhost:4200",{"_index":618,"title":{},"body":{"index.html":{}}}],["icon's",{"_index":546,"title":{},"body":{"index.html":{}}}],["icons",{"_index":475,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":268,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["import",{"_index":14,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{}}}],["imported",{"_index":612,"title":{},"body":{"index.html":{}}}],["imports",{"_index":320,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{}}}],["include",{"_index":580,"title":{},"body":{"index.html":{}}}],["increment",{"_index":506,"title":{},"body":{"index.html":{}}}],["incrementing",{"_index":482,"title":{},"body":{"index.html":{}}}],["increments",{"_index":467,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{}}}],["initialcheckcontentconfig",{"_index":134,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{}},"body":{"classes/AbstractSPWindowRef.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":17,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('spwindowtoken",{"_index":38,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":291,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["inputs",{"_index":283,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["inside",{"_index":533,"title":{},"body":{"index.html":{}}}],["instance",{"_index":232,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["instanceof",{"_index":85,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["interactive",{"_index":567,"title":{},"body":{"index.html":{}}}],["interface",{"_index":113,"title":{"interfaces/CheckContentConfig.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{}},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{},"coverage.html":{}}}],["interfaces",{"_index":115,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{},"overview.html":{}}}],["interval",{"_index":121,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"miscellaneous/variables.html":{}}}],["ipollforvalueconfig",{"_index":129,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["iscomplete",{"_index":324,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["iscomplete(key",{"_index":336,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["isloaded",{"_index":132,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["it's",{"_index":545,"title":{},"body":{"index.html":{}}}],["item",{"_index":334,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["ix",{"_index":276,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"index.html":{}}}],["ix_on_render_complete_provider",{"_index":318,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ixonrendercompletecomponent",{"_index":259,"title":{"components/IxOnRenderCompleteComponent.html":{}},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"coverage.html":{},"overview.html":{}}}],["ixonrendercompletemodule",{"_index":305,"title":{"modules/IxOnRenderCompleteModule.html":{}},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules.html":{},"overview.html":{}}}],["ixonrendercompleteservice",{"_index":286,"title":{"injectables/IxOnRenderCompleteService.html":{}},"body":{"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ixutilities",{"_index":550,"title":{},"body":{"index.html":{}}}],["ixwindowrefmodule",{"_index":354,"title":{"modules/IxWindowRefModule.html":{}},"body":{"modules/IxWindowRefModule.html":{},"modules.html":{},"overview.html":{}}}],["ixwindowrefservice",{"_index":42,"title":{"injectables/IxWindowRefService.html":{}},"body":{"classes/AbstractSPWindowRef.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"coverage.html":{},"overview.html":{}}}],["jest",{"_index":631,"title":{},"body":{"index.html":{}}}],["js",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":327,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["learn",{"_index":645,"title":{},"body":{"index.html":{}}}],["left",{"_index":249,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":298,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["lib",{"_index":610,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":582,"title":{},"body":{"index.html":{}}}],["library",{"_index":608,"title":{},"body":{"index.html":{}}}],["libs/.../check",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../content",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../ix",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../resize.ts",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../windowref.mock.ts",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../windowref.service.ts",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/services/src/lib/check",{"_index":116,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/services/src/lib/on",{"_index":264,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/services/src/lib/resize.ts",{"_index":246,"title":{},"body":{"interfaces/DomRectPosition.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/services/src/lib/services.module.ts",{"_index":403,"title":{},"body":{"modules/ServicesModule.html":{}}}],["libs/services/src/lib/window",{"_index":6,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":358,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["limit",{"_index":122,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":294,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["line:variable",{"_index":30,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["loaded",{"_index":193,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["loaded.module.ts",{"_index":223,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loaded.module.ts:13",{"_index":244,"title":{},"body":{"injectables/ContentLoadedService.html":{}}}],["loaded.module.ts:36",{"_index":226,"title":{},"body":{"modules/ContentLoadedModule.html":{}}}],["loaded.ts",{"_index":119,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaded.ts:22",{"_index":210,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:23",{"_index":207,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:25",{"_index":211,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:30",{"_index":203,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:44",{"_index":214,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:69",{"_index":217,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:73",{"_index":218,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:81",{"_index":216,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:86",{"_index":215,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded.ts:92",{"_index":212,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["loaded/check",{"_index":118,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaded/content",{"_index":222,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localstorageavailable",{"_index":106,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["location",{"_index":387,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["major",{"_index":507,"title":{},"body":{"index.html":{}}}],["many",{"_index":573,"title":{},"body":{"index.html":{}}}],["match",{"_index":63,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["matches",{"_index":384,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["matching",{"_index":111,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matchmedia",{"_index":383,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["material",{"_index":474,"title":{},"body":{"index.html":{}}}],["media",{"_index":64,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["metadata",{"_index":270,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["method",{"_index":147,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["methods",{"_index":200,"title":{},"body":{"classes/CheckContentLoaded.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["minor",{"_index":508,"title":{},"body":{"index.html":{}}}],["minute",{"_index":563,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":452,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":401,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["mockinstance",{"_index":398,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["mockspwindow",{"_index":375,"title":{"classes/MockSpWindow.html":{}},"body":{"classes/MockSpWindow.html":{},"coverage.html":{}}}],["module",{"_index":219,"title":{"modules/ContentLoadedModule.html":{},"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{}},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["modules",{"_index":221,"title":{"modules.html":{}},"body":{"modules/ContentLoadedModule.html":{},"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepos",{"_index":559,"title":{},"body":{"index.html":{}}}],["more",{"_index":646,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":606,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"classes/CheckContentLoaded.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/functions.html":{}}}],["nativewindow",{"_index":10,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["navigate",{"_index":617,"title":{},"body":{"index.html":{}}}],["nest",{"_index":595,"title":{},"body":{"index.html":{}}}],["new",{"_index":37,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":29,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":587,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":282,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["ngmodule",{"_index":227,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"modules/ServicesModule.html":{}}}],["node",{"_index":599,"title":{},"body":{"index.html":{}}}],["noop",{"_index":365,"title":{},"body":{"modules/IxWindowRefModule.html":{},"classes/MockSpWindow.html":{}}}],["npm",{"_index":531,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":588,"title":{},"body":{"index.html":{}}}],["nrwl/angular:app",{"_index":604,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":609,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":598,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":596,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":600,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":590,"title":{},"body":{"index.html":{}}}],["nrwl/schematics",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["nrwl/web",{"_index":594,"title":{},"body":{"index.html":{}}}],["ns_error_dom_quota_reached",{"_index":99,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["null",{"_index":185,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["number",{"_index":124,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{}}}],["nx",{"_index":553,"title":{},"body":{"index.html":{}}}],["observable",{"_index":127,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["observable((observer",{"_index":157,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["observer",{"_index":128,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["observer.complete",{"_index":174,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["observer.next(r",{"_index":173,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["observer.next(result",{"_index":199,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["onbeforeunload",{"_index":48,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["one",{"_index":66,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["open",{"_index":386,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["optional",{"_index":205,"title":{},"body":{"classes/CheckContentLoaded.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":314,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["overview",{"_index":651,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":421,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":471,"title":{},"body":{"index.html":{}}}],["param",{"_index":233,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{}}}],["parameters",{"_index":204,"title":{},"body":{"classes/CheckContentLoaded.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/functions.html":{}}}],["parentdispatcher",{"_index":353,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{},"miscellaneous/functions.html":{}}}],["pascal",{"_index":33,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["patch",{"_index":509,"title":{},"body":{"index.html":{}}}],["path",{"_index":539,"title":{},"body":{"index.html":{}}}],["pipe(distinctuntilchanged",{"_index":345,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["pipe(pollforvaluewithconfig(config",{"_index":171,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["plugins",{"_index":574,"title":{},"body":{"index.html":{}}}],["poll",{"_index":151,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["poller",{"_index":149,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["pollforvaluewithconfig",{"_index":130,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["present",{"_index":96,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["preservewhitespaces",{"_index":275,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["prevent",{"_index":60,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["previously",{"_index":194,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["private",{"_index":44,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["process",{"_index":523,"title":{},"body":{"index.html":{}}}],["prod",{"_index":624,"title":{},"body":{"index.html":{}}}],["production",{"_index":626,"title":{},"body":{"index.html":{}}}],["project",{"_index":469,"title":{},"body":{"index.html":{}}}],["project's",{"_index":542,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":622,"title":{},"body":{"index.html":{}}}],["projects",{"_index":520,"title":{},"body":{"index.html":{}}}],["projects/uiux/icons",{"_index":549,"title":{},"body":{"index.html":{}}}],["properties",{"_index":120,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["provide",{"_index":237,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{}}}],["provider",{"_index":399,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["providers",{"_index":241,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["publish",{"_index":532,"title":{},"body":{"index.html":{}}}],["query",{"_index":162,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["quick",{"_index":560,"title":{},"body":{"index.html":{}}}],["quotaexceedederror",{"_index":98,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["r",{"_index":169,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["r.isloaded",{"_index":170,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["rc",{"_index":499,"title":{},"body":{"index.html":{}}}],["rc.1",{"_index":502,"title":{},"body":{"index.html":{}}}],["react",{"_index":589,"title":{},"body":{"index.html":{}}}],["recognized",{"_index":530,"title":{},"body":{"index.html":{}}}],["ref/window.module.ts",{"_index":357,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["ref/windowref.mock.ts",{"_index":376,"title":{},"body":{"classes/MockSpWindow.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ref/windowref.mock.ts:11",{"_index":391,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["ref/windowref.mock.ts:36",{"_index":395,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["ref/windowref.mock.ts:41",{"_index":393,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["ref/windowref.mock.ts:9",{"_index":380,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["ref/windowref.service.ts",{"_index":7,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ref/windowref.service.ts:19",{"_index":13,"title":{},"body":{"classes/AbstractSPWindowRef.html":{}}}],["ref/windowref.service.ts:26",{"_index":371,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:27",{"_index":372,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:29",{"_index":373,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:30",{"_index":367,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:57",{"_index":374,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:61",{"_index":370,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:86",{"_index":368,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["ref/windowref.service.ts:90",{"_index":369,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["releasing",{"_index":519,"title":{},"body":{"index.html":{}}}],["reload",{"_index":388,"title":{},"body":{"classes/MockSpWindow.html":{},"index.html":{}}}],["remove",{"_index":332,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["render",{"_index":265,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["repetitively",{"_index":161,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["repo",{"_index":480,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":363,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["reset",{"_index":182,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}],["reset(key",{"_index":338,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["resize",{"_index":49,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["resize').subscribe",{"_index":58,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["result",{"_index":110,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":112,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":26,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{}}}],["returns",{"_index":213,"title":{},"body":{"classes/CheckContentLoaded.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":250,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":362,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["root",{"_index":41,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["run",{"_index":485,"title":{},"body":{"index.html":{}}}],["runing",{"_index":536,"title":{},"body":{"index.html":{}}}],["running",{"_index":67,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["rxjs",{"_index":20,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":342,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["same",{"_index":607,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":621,"title":{},"body":{"index.html":{}}}],["script",{"_index":524,"title":{},"body":{"index.html":{}}}],["see",{"_index":641,"title":{},"body":{"index.html":{}}}],["selection",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":178,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{}}}],["semver",{"_index":463,"title":{},"body":{"index.html":{}}}],["serve",{"_index":616,"title":{},"body":{"index.html":{}}}],["server",{"_index":615,"title":{},"body":{"index.html":{}}}],["servicesmodule",{"_index":402,"title":{"modules/ServicesModule.html":{}},"body":{"modules/ServicesModule.html":{},"modules.html":{}}}],["sessionstorageavailable",{"_index":108,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["set",{"_index":555,"title":{},"body":{"index.html":{}}}],["setcontainerselector",{"_index":201,"title":{},"body":{"classes/CheckContentLoaded.html":{}}}],["setcontainerselector(selector",{"_index":175,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["setmatchmedia",{"_index":379,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["setmatchmedia(_val",{"_index":392,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["settimeout",{"_index":70,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["sharable",{"_index":611,"title":{},"body":{"index.html":{}}}],["showing",{"_index":565,"title":{},"body":{"index.html":{}}}],["skipself",{"_index":228,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"miscellaneous/variables.html":{}}}],["something",{"_index":102,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"modules/IxOnRenderCompleteModule.html":{},"injectables/IxOnRenderCompleteService.html":{},"modules/IxWindowRefModule.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["sourceobservable",{"_index":163,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["spawned",{"_index":150,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["spwindow",{"_index":36,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":561,"title":{},"body":{"index.html":{}}}],["started",{"_index":462,"title":{"index.html":{}},"body":{}}],["statements",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":224,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{}}}],["storage",{"_index":76,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["storage.length",{"_index":104,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["storage.removeitem(x",{"_index":82,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["storage.setitem(x",{"_index":81,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["storageavailable",{"_index":366,"title":{},"body":{"injectables/IxWindowRefService.html":{}}}],["storageavailable(type",{"_index":73,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["stored",{"_index":103,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["string",{"_index":74,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{}}}],["styles",{"_index":262,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["styleurls",{"_index":278,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["subject",{"_index":21,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["subscribe((r",{"_index":172,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["subscription",{"_index":22,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["success",{"_index":166,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["super",{"_index":51,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["support",{"_index":649,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":572,"title":{},"body":{"index.html":{}}}],["svg",{"_index":650,"title":{},"body":{"modules.html":{}}}],["table",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":261,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["templateurl",{"_index":280,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["test",{"_index":93,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{},"index.html":{}}}],["tests",{"_index":628,"title":{},"body":{"index.html":{}}}],["that.windowprops",{"_index":396,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["there's",{"_index":101,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this._cache[key",{"_index":350,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["this._checkcount",{"_index":197,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._config",{"_index":145,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._containerqueryselector",{"_index":177,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._containers",{"_index":188,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._containers.length",{"_index":190,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._containers[0].childnodes",{"_index":198,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._containers[0].childnodes.length",{"_index":191,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._document.queryselectorall(this._containerqueryselector",{"_index":189,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._getcache(key",{"_index":343,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["this._getcache(key).complete",{"_index":348,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["this._getcache(key).next(false",{"_index":347,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["this._getcache(key).next(true",{"_index":346,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["this._globalsubscription",{"_index":56,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this._matchmedia",{"_index":385,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["this._numberloaded",{"_index":183,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._onrendercomplete.complete(this.containercssclass",{"_index":297,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["this._querydom",{"_index":164,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this._resizing",{"_index":68,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.childnodes",{"_index":180,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this.containercssclass",{"_index":296,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["this.contentloaded.complete",{"_index":186,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this.contentloaded.next",{"_index":181,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["this.nativewindow.addeventlistener('onbeforeunload",{"_index":54,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.onbeforeunload",{"_index":52,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.onbeforeunload.next('onbeforeunload",{"_index":55,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.resize",{"_index":53,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.resize.next('resize",{"_index":71,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.storageavailable('localstorage",{"_index":107,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["this.storageavailable('sessionstorage",{"_index":109,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["those",{"_index":512,"title":{},"body":{"index.html":{}}}],["time",{"_index":146,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["timeout",{"_index":123,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"miscellaneous/variables.html":{}}}],["tojson",{"_index":256,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":528,"title":{},"body":{"index.html":{}}}],["tools",{"_index":558,"title":{},"body":{"index.html":{}}}],["top",{"_index":251,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":263,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["tried",{"_index":521,"title":{},"body":{"index.html":{}}}],["triggering",{"_index":62,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["true",{"_index":69,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{}}}],["try",{"_index":78,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["tslib",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":28,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["tutorial",{"_index":568,"title":{},"body":{"index.html":{}}}],["two",{"_index":525,"title":{},"body":{"index.html":{}}}],["type",{"_index":125,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"injectables/ContentLoadedService.html":{},"interfaces/DomRectPosition.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":578,"title":{},"body":{"index.html":{}}}],["uiux",{"_index":360,"title":{},"body":{"modules/IxWindowRefModule.html":{}}}],["uiux/rxjs",{"_index":131,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["understand",{"_index":638,"title":{},"body":{"index.html":{}}}],["unit",{"_index":627,"title":{},"body":{"index.html":{}}}],["unload",{"_index":179,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["update",{"_index":470,"title":{},"body":{"index.html":{}}}],["updates",{"_index":488,"title":{},"body":{"index.html":{}}}],["use",{"_index":464,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":239,"title":{},"body":{"modules/ContentLoadedModule.html":{},"injectables/ContentLoadedService.html":{},"injectables/IxOnRenderCompleteService.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":400,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["using",{"_index":552,"title":{},"body":{"index.html":{}}}],["utilities/mylib",{"_index":613,"title":{},"body":{"index.html":{}}}],["val",{"_index":344,"title":{},"body":{"injectables/IxOnRenderCompleteService.html":{}}}],["value",{"_index":209,"title":{},"body":{"classes/CheckContentLoaded.html":{},"injectables/IxOnRenderCompleteService.html":{},"injectables/IxWindowRefService.html":{},"classes/MockSpWindow.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":301,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["variable",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":655,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver=8.0.1",{"_index":487,"title":{},"body":{"index.html":{}}}],["version",{"_index":468,"title":{},"body":{"index.html":{}}}],["versions",{"_index":510,"title":{},"body":{"index.html":{}}}],["via",{"_index":630,"title":{},"body":{"index.html":{}}}],["video",{"_index":564,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":292,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["viewencapsulation.none",{"_index":274,"title":{},"body":{"components/IxOnRenderCompleteComponent.html":{}}}],["visit",{"_index":644,"title":{},"body":{"index.html":{}}}],["void",{"_index":176,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{},"components/IxOnRenderCompleteComponent.html":{},"injectables/IxOnRenderCompleteService.html":{},"classes/MockSpWindow.html":{}}}],["vs",{"_index":195,"title":{},"body":{"interfaces/CheckContentConfig.html":{},"classes/CheckContentLoaded.html":{},"interfaces/Content.html":{}}}],["want",{"_index":505,"title":{},"body":{"index.html":{}}}],["way",{"_index":59,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["web",{"_index":591,"title":{},"body":{"index.html":{}}}],["well",{"_index":511,"title":{},"body":{"index.html":{}}}],["width",{"_index":252,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":27,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"injectables/IxWindowRefService.html":{}}}],["windowprops",{"_index":378,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["windowref.service",{"_index":364,"title":{},"body":{"modules/IxWindowRefModule.html":{},"classes/MockSpWindow.html":{}}}],["workspace",{"_index":571,"title":{},"body":{"index.html":{}}}],["www.test.com#testtag?param1=1&param2=2",{"_index":390,"title":{},"body":{"classes/MockSpWindow.html":{}}}],["x",{"_index":79,"title":{},"body":{"classes/AbstractSPWindowRef.html":{},"interfaces/DomRectPosition.html":{},"injectables/IxWindowRefService.html":{},"miscellaneous/variables.html":{}}}],["x1f50e",{"_index":554,"title":{},"body":{"index.html":{}}}],["y",{"_index":253,"title":{},"body":{"interfaces/DomRectPosition.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":465,"title":{},"body":{"index.html":{}}}],["yes",{"_index":206,"title":{},"body":{"classes/CheckContentLoaded.html":{},"injectables/ContentLoadedService.html":{}}}],["zone.js",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":313,"title":{},"body":{"modules/IxOnRenderCompleteModule.html":{},"modules/IxWindowRefModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractSPWindowRef.html":{"url":"classes/AbstractSPWindowRef.html","title":"class - AbstractSPWindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSPWindowRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/window-ref/windowRef.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, InjectionToken } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nexport function _window(): any {\n  return window;\n}\n\n// tslint:disable-next-line:variable-name allow-pascal-case\nexport const SPWindow: InjectionToken = new InjectionToken('SPWindowToken');\n\nexport abstract class AbstractSPWindowRef {\n  abstract get nativeWindow(): any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IxWindowRefService extends AbstractSPWindowRef {\n  private _globalSubscription: Subscription;\n  private _resizing = false;\n\n  onbeforeunload: Subject;\n  resize: Subject;\n\n  constructor() {\n    super();\n\n    this.onbeforeunload = new Subject();\n    this.resize = new Subject();\n\n    this.nativeWindow.addEventListener('onbeforeunload', () => {\n      this.onbeforeunload.next('onbeforeunload');\n    });\n\n    this._globalSubscription = fromEvent(this.nativeWindow, 'resize').subscribe(() => {\n      // way to prevent the resize event from triggering the match\n      // media if there is already one event running already.\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.resize.next('resize');\n          this._resizing = false;\n        }, 100);\n      }\n    });\n\n    this.resize.next('resize');\n  }\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\n  storageAvailable(type: string): boolean {\n    const storage = _window()[type];\n    try {\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return (\n        e instanceof DOMException &&\n        // everything except Firefox\n        (e.code === 22 ||\n          // Firefox\n          e.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          e.name === 'QuotaExceededError' ||\n          // Firefox\n          e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage.length !== 0\n      );\n    }\n  }\n\n  localStorageAvailable(): boolean {\n    return this.storageAvailable('localStorage');\n  }\n\n  sessionStorageAvailable(): boolean {\n    return this.storageAvailable('sessionStorage');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckContentConfig.html":{"url":"interfaces/CheckContentConfig.html","title":"interface - CheckContentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CheckContentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        interval\n                                \n                                \n                                        limit\n                                \n                                \n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { IPollForValueConfig, pollForValueWithConfig } from '@uiux/rxjs';\n\nexport interface Content {\n  isLoaded: boolean;\n  childNodes: any[];\n}\n\nexport interface CheckContentConfig {\n  limit: number;\n  interval: number;\n  timeout: number;\n}\n\nconst initialCheckContentConfig: CheckContentConfig = {\n  limit: 20,\n  interval: 100,\n  timeout: 2000,\n};\n\nexport class CheckContentLoaded {\n  private _numberLoaded = 0;\n  private _containers: any;\n\n  contentLoaded: BehaviorSubject = new BehaviorSubject({\n    isLoaded: false,\n    childNodes: [],\n  });\n\n  childNodes: any[] = [];\n\n  constructor(\n    private _document: Document,\n    private _containerQuerySelector: string,\n    private _config?: CheckContentConfig\n  ) {\n    this._config = _config ? _config : initialCheckContentConfig;\n  }\n\n  /**\n   * Every time this method is called, a new poller\n   * is spawned to poll for content ( children ) in a given dom element.\n   */\n  checkedContentLoaded(): Observable {\n    // const that = this;\n    //\n    return new Observable((observer: Observer) => {\n      const config: IPollForValueConfig = {\n        delay: 500,\n        interval: 500,\n        timeout: 2000,\n\n        // Observable to repetitively query\n        sourceObservable: () => this._queryDom(),\n\n        // function that evaluates success criteria\n        compare: (r: Content) => r.isLoaded,\n      };\n\n      this._queryDom()\n        .pipe(pollForValueWithConfig(config))\n        .subscribe((r: Content) => {\n          observer.next(r);\n          observer.complete();\n        });\n    });\n  }\n\n  setContainerSelector(selector: string): void {\n    this._containerQuerySelector = selector;\n  }\n\n  unload(): void {\n    this.childNodes = [];\n    this.contentLoaded.next({\n      isLoaded: false,\n      childNodes: this.childNodes,\n    });\n  }\n\n  reset(): void {\n    this._numberLoaded = 0;\n    this.childNodes = [];\n  }\n\n  destroy(): void {\n    this.childNodes = null;\n    this.childNodes = [];\n    this.contentLoaded.complete();\n  }\n\n  private _queryDom(): Observable {\n    return new Observable((observer: Observer) => {\n      this._containers = this._document.querySelectorAll(this._containerQuerySelector);\n\n      if (this._containers && this._containers.length && this._containers[0].childNodes.length) {\n        let result: Content = {\n          isLoaded: false,\n          childNodes: [],\n        };\n\n        // Check the number of children loaded previously vs the number of childNodes found\n        if (this._numberLoaded !== this._containers[0].childNodes.length) {\n          this._numberLoaded = this._containers[0].childNodes.length;\n\n          // this._checkCount = 0;\n        } else {\n          this.childNodes = this._containers[0].childNodes;\n\n          result = {\n            isLoaded: true,\n            childNodes: this._containers[0].childNodes,\n          };\n        }\n\n        observer.next(result);\n\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckContentLoaded.html":{"url":"classes/CheckContentLoaded.html","title":"class - CheckContentLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckContentLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _containers\n                            \n                            \n                                    Private\n                                _numberLoaded\n                            \n                            \n                                childNodes\n                            \n                            \n                                contentLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queryDom\n                            \n                            \n                                checkedContentLoaded\n                            \n                            \n                                destroy\n                            \n                            \n                                reset\n                            \n                            \n                                setContainerSelector\n                            \n                            \n                                unload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_document: Document, _containerQuerySelector: string, _config?: CheckContentConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _containerQuerySelector\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        CheckContentConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _numberLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childNodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject({\n    isLoaded: false,\n    childNodes: [],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _queryDom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _queryDom()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkedContentLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ncheckedContentLoaded()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:44\n                \n            \n\n\n            \n                \n                    Every time this method is called, a new poller\nis spawned to poll for content ( children ) in a given dom element.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContainerSelector\n                        \n                        \n                    \n                \n            \n            \n                \nsetContainerSelector(selector: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unload\n                        \n                        \n                    \n                \n            \n            \n                \nunload()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/check-content-loaded.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { IPollForValueConfig, pollForValueWithConfig } from '@uiux/rxjs';\n\nexport interface Content {\n  isLoaded: boolean;\n  childNodes: any[];\n}\n\nexport interface CheckContentConfig {\n  limit: number;\n  interval: number;\n  timeout: number;\n}\n\nconst initialCheckContentConfig: CheckContentConfig = {\n  limit: 20,\n  interval: 100,\n  timeout: 2000,\n};\n\nexport class CheckContentLoaded {\n  private _numberLoaded = 0;\n  private _containers: any;\n\n  contentLoaded: BehaviorSubject = new BehaviorSubject({\n    isLoaded: false,\n    childNodes: [],\n  });\n\n  childNodes: any[] = [];\n\n  constructor(\n    private _document: Document,\n    private _containerQuerySelector: string,\n    private _config?: CheckContentConfig\n  ) {\n    this._config = _config ? _config : initialCheckContentConfig;\n  }\n\n  /**\n   * Every time this method is called, a new poller\n   * is spawned to poll for content ( children ) in a given dom element.\n   */\n  checkedContentLoaded(): Observable {\n    // const that = this;\n    //\n    return new Observable((observer: Observer) => {\n      const config: IPollForValueConfig = {\n        delay: 500,\n        interval: 500,\n        timeout: 2000,\n\n        // Observable to repetitively query\n        sourceObservable: () => this._queryDom(),\n\n        // function that evaluates success criteria\n        compare: (r: Content) => r.isLoaded,\n      };\n\n      this._queryDom()\n        .pipe(pollForValueWithConfig(config))\n        .subscribe((r: Content) => {\n          observer.next(r);\n          observer.complete();\n        });\n    });\n  }\n\n  setContainerSelector(selector: string): void {\n    this._containerQuerySelector = selector;\n  }\n\n  unload(): void {\n    this.childNodes = [];\n    this.contentLoaded.next({\n      isLoaded: false,\n      childNodes: this.childNodes,\n    });\n  }\n\n  reset(): void {\n    this._numberLoaded = 0;\n    this.childNodes = [];\n  }\n\n  destroy(): void {\n    this.childNodes = null;\n    this.childNodes = [];\n    this.contentLoaded.complete();\n  }\n\n  private _queryDom(): Observable {\n    return new Observable((observer: Observer) => {\n      this._containers = this._document.querySelectorAll(this._containerQuerySelector);\n\n      if (this._containers && this._containers.length && this._containers[0].childNodes.length) {\n        let result: Content = {\n          isLoaded: false,\n          childNodes: [],\n        };\n\n        // Check the number of children loaded previously vs the number of childNodes found\n        if (this._numberLoaded !== this._containers[0].childNodes.length) {\n          this._numberLoaded = this._containers[0].childNodes.length;\n\n          // this._checkCount = 0;\n        } else {\n          this.childNodes = this._containers[0].childNodes;\n\n          result = {\n            isLoaded: true,\n            childNodes: this._containers[0].childNodes,\n          };\n        }\n\n        observer.next(result);\n\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Content.html":{"url":"interfaces/Content.html","title":"interface - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        childNodes\n                                \n                                \n                                        isLoaded\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childNodes\n                                    \n                                \n                                \n                                    \n                                        childNodes:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoaded\n                                    \n                                \n                                \n                                    \n                                        isLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { IPollForValueConfig, pollForValueWithConfig } from '@uiux/rxjs';\n\nexport interface Content {\n  isLoaded: boolean;\n  childNodes: any[];\n}\n\nexport interface CheckContentConfig {\n  limit: number;\n  interval: number;\n  timeout: number;\n}\n\nconst initialCheckContentConfig: CheckContentConfig = {\n  limit: 20,\n  interval: 100,\n  timeout: 2000,\n};\n\nexport class CheckContentLoaded {\n  private _numberLoaded = 0;\n  private _containers: any;\n\n  contentLoaded: BehaviorSubject = new BehaviorSubject({\n    isLoaded: false,\n    childNodes: [],\n  });\n\n  childNodes: any[] = [];\n\n  constructor(\n    private _document: Document,\n    private _containerQuerySelector: string,\n    private _config?: CheckContentConfig\n  ) {\n    this._config = _config ? _config : initialCheckContentConfig;\n  }\n\n  /**\n   * Every time this method is called, a new poller\n   * is spawned to poll for content ( children ) in a given dom element.\n   */\n  checkedContentLoaded(): Observable {\n    // const that = this;\n    //\n    return new Observable((observer: Observer) => {\n      const config: IPollForValueConfig = {\n        delay: 500,\n        interval: 500,\n        timeout: 2000,\n\n        // Observable to repetitively query\n        sourceObservable: () => this._queryDom(),\n\n        // function that evaluates success criteria\n        compare: (r: Content) => r.isLoaded,\n      };\n\n      this._queryDom()\n        .pipe(pollForValueWithConfig(config))\n        .subscribe((r: Content) => {\n          observer.next(r);\n          observer.complete();\n        });\n    });\n  }\n\n  setContainerSelector(selector: string): void {\n    this._containerQuerySelector = selector;\n  }\n\n  unload(): void {\n    this.childNodes = [];\n    this.contentLoaded.next({\n      isLoaded: false,\n      childNodes: this.childNodes,\n    });\n  }\n\n  reset(): void {\n    this._numberLoaded = 0;\n    this.childNodes = [];\n  }\n\n  destroy(): void {\n    this.childNodes = null;\n    this.childNodes = [];\n    this.contentLoaded.complete();\n  }\n\n  private _queryDom(): Observable {\n    return new Observable((observer: Observer) => {\n      this._containers = this._document.querySelectorAll(this._containerQuerySelector);\n\n      if (this._containers && this._containers.length && this._containers[0].childNodes.length) {\n        let result: Content = {\n          isLoaded: false,\n          childNodes: [],\n        };\n\n        // Check the number of children loaded previously vs the number of childNodes found\n        if (this._numberLoaded !== this._containers[0].childNodes.length) {\n          this._numberLoaded = this._containers[0].childNodes.length;\n\n          // this._checkCount = 0;\n        } else {\n          this.childNodes = this._containers[0].childNodes;\n\n          result = {\n            isLoaded: true,\n            childNodes: this._containers[0].childNodes,\n          };\n        }\n\n        observer.next(result);\n\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentLoadedModule.html":{"url":"modules/ContentLoadedModule.html","title":"module - ContentLoadedModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentLoadedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/content-loaded.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Injectable, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CheckContentConfig, CheckContentLoaded } from './check-content-loaded';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentLoadedService {\n  /**\n   * Factory method to create CheckContentLoaded instance;\n   * @param _document\n   * @param _containerQuerySelector\n   */\n  static factory(\n    _document: Document,\n    _containerQuerySelector: string,\n    _config?: CheckContentConfig\n  ): CheckContentLoaded {\n    return new CheckContentLoaded(_document, _containerQuerySelector, _config);\n  }\n}\n\nexport function _contentLoadedFactory(a: ContentLoadedService): ContentLoadedService {\n  return a || new ContentLoadedService();\n}\n\nexport const CONTENT_LOADED_PROVIDER: any = {\n  provide: ContentLoadedService,\n  deps: [[new Optional(), new SkipSelf(), ContentLoadedService]],\n  useFactory: _contentLoadedFactory,\n};\n\n@NgModule({\n  providers: [CONTENT_LOADED_PROVIDER],\n})\nexport class ContentLoadedModule {\n  static forRoot(): any {\n    return {\n      ngModule: ContentLoadedModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentLoadedService.html":{"url":"injectables/ContentLoadedService.html","title":"injectable - ContentLoadedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentLoadedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                factory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(_document: Document, _containerQuerySelector: string, _config?: CheckContentConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/check-content-loaded/content-loaded.module.ts:13\n                \n            \n\n\n            \n                \n                    Factory method to create CheckContentLoaded instance;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _document\n                                    \n                                            Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _containerQuerySelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _config\n                                    \n                                                CheckContentConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CheckContentLoaded\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CheckContentConfig, CheckContentLoaded } from './check-content-loaded';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentLoadedService {\n  /**\n   * Factory method to create CheckContentLoaded instance;\n   * @param _document\n   * @param _containerQuerySelector\n   */\n  static factory(\n    _document: Document,\n    _containerQuerySelector: string,\n    _config?: CheckContentConfig\n  ): CheckContentLoaded {\n    return new CheckContentLoaded(_document, _containerQuerySelector, _config);\n  }\n}\n\nexport function _contentLoadedFactory(a: ContentLoadedService): ContentLoadedService {\n  return a || new ContentLoadedService();\n}\n\nexport const CONTENT_LOADED_PROVIDER: any = {\n  provide: ContentLoadedService,\n  deps: [[new Optional(), new SkipSelf(), ContentLoadedService]],\n  useFactory: _contentLoadedFactory,\n};\n\n@NgModule({\n  providers: [CONTENT_LOADED_PROVIDER],\n})\nexport class ContentLoadedModule {\n  static forRoot(): any {\n    return {\n      ngModule: ContentLoadedModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomRectPosition.html":{"url":"interfaces/DomRectPosition.html","title":"interface - DomRectPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DomRectPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/resize.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        height\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                                \n                                        width\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DomRectPosition {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport const defaultResizeProperties: DOMRectReadOnly = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  toJSON: () => {\n  },\n};\n\nexport function getResizeProperties({ x, y, width, height, top, right, bottom, left }: DOMRectReadOnly): DomRectPosition {\n  return { x, y, width, height, top, right, bottom, left };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IxOnRenderCompleteComponent.html":{"url":"components/IxOnRenderCompleteComponent.html","title":"component - IxOnRenderCompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IxOnRenderCompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/services/src/lib/on-render-complete/ix-on-render-complete.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ix-on-render-complete\n            \n\n            \n                styleUrls\n                ./ix-on-render-complete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ix-on-render-complete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                containerCssClass\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_onRenderComplete: IxOnRenderCompleteService)\n                    \n                \n                        \n                            \n                                Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _onRenderComplete\n                                                  \n                                                        \n                                                                        IxOnRenderCompleteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        containerCssClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IxOnRenderCompleteService } from './ix-on-render-complete.service';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'ix-on-render-complete',\n  templateUrl: './ix-on-render-complete.component.html',\n  styleUrls: ['./ix-on-render-complete.component.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IxOnRenderCompleteComponent implements AfterViewInit {\n  @Input()\n  containerCssClass: string;\n\n  constructor(private _onRenderComplete: IxOnRenderCompleteService) {}\n\n  ngAfterViewInit(): void {\n    if (this.containerCssClass) {\n      this._onRenderComplete.complete(this.containerCssClass);\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./ix-on-render-complete.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'IxOnRenderCompleteComponent', 'selector': 'ix-on-render-complete'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IxOnRenderCompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IxOnRenderCompleteModule.html":{"url":"modules/IxOnRenderCompleteModule.html","title":"module - IxOnRenderCompleteModule","body":"\n                   \n\n\n\n\n    Modules\n    IxOnRenderCompleteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IxOnRenderCompleteModule\n\n\n\ncluster_IxOnRenderCompleteModule_declarations\n\n\n\ncluster_IxOnRenderCompleteModule_exports\n\n\n\n\nIxOnRenderCompleteComponent\n\nIxOnRenderCompleteComponent\n\n\n\nIxOnRenderCompleteModule\n\nIxOnRenderCompleteModule\n\nIxOnRenderCompleteModule -->\n\nIxOnRenderCompleteComponent->IxOnRenderCompleteModule\n\n\n\n\n\nIxOnRenderCompleteComponent \n\nIxOnRenderCompleteComponent \n\nIxOnRenderCompleteComponent  -->\n\nIxOnRenderCompleteModule->IxOnRenderCompleteComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/services/src/lib/on-render-complete/ix-on-render-complete.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IxOnRenderCompleteComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IxOnRenderCompleteComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IX_ON_RENDER_COMPLETE_PROVIDER } from './ix-on-render-complete.service';\nimport { IxOnRenderCompleteComponent } from './ix-on-render-complete.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [IX_ON_RENDER_COMPLETE_PROVIDER],\n  declarations: [IxOnRenderCompleteComponent],\n  exports: [IxOnRenderCompleteComponent],\n})\nexport class IxOnRenderCompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IxOnRenderCompleteService.html":{"url":"injectables/IxOnRenderCompleteService.html","title":"injectable - IxOnRenderCompleteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IxOnRenderCompleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getCache\n                            \n                            \n                                complete\n                            \n                            \n                                destroy\n                            \n                            \n                                isComplete\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getCache(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BehaviorSubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \ncomplete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:33\n                \n            \n\n\n            \n                \n                    remove cache item.\nthis should only be called by consumer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IxOnRenderCompleteService {\n  private _cache: any = {};\n\n  isComplete(key: string): Observable {\n    return (\n      this._getCache(key)\n\n        // if val is true\n        .pipe(distinctUntilChanged())\n    );\n  }\n\n  complete(key: string) {\n    this._getCache(key).next(true);\n  }\n\n  reset(key: string) {\n    this._getCache(key).next(false);\n  }\n\n  /**\n   * remove cache item.\n   * this should only be called by consumer.\n   * @param key\n   */\n  destroy(key: string) {\n    this._getCache(key).complete();\n    delete this._cache[key];\n  }\n\n  private _getCache(key: string): BehaviorSubject {\n    if (!this._cache[key]) {\n      this._cache[key] = new BehaviorSubject(false);\n    }\n\n    return this._cache[key];\n  }\n}\n\nexport function _spOnRenderCompleteFactory(\n  parentDispatcher: IxOnRenderCompleteService\n): IxOnRenderCompleteService {\n  return parentDispatcher || new IxOnRenderCompleteService();\n}\n\nexport const IX_ON_RENDER_COMPLETE_PROVIDER: any[] = [\n  {\n    provide: IxOnRenderCompleteService,\n    useFactory: _spOnRenderCompleteFactory,\n    // tslint:disable-next-line\n    deps: [[new Optional(), new SkipSelf(), IxOnRenderCompleteService]],\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IxWindowRefModule.html":{"url":"modules/IxWindowRefModule.html","title":"module - IxWindowRefModule","body":"\n                   \n\n\n\n\n    Modules\n    IxWindowRefModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IxWindowRefModule\n\n\n\ncluster_IxWindowRefModule_providers\n\n\n\n\nIxWindowRefService\n\nIxWindowRefService\n\n\n\nIxWindowRefModule\n\nIxWindowRefModule\n\nIxWindowRefModule -->\n\nIxWindowRefService->IxWindowRefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/services/src/lib/window-ref/window.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IxWindowRefService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * Copyright UIUX Engineering All Rights Reserved.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { IxWindowRefService } from './windowRef.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [],\n  providers: [IxWindowRefService],\n})\nexport class IxWindowRefModule {\n  /* noop */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IxWindowRefService.html":{"url":"injectables/IxWindowRefService.html","title":"injectable - IxWindowRefService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IxWindowRefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/window-ref/windowRef.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractSPWindowRef\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _globalSubscription\n                            \n                            \n                                    Private\n                                _resizing\n                            \n                            \n                                onbeforeunload\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                localStorageAvailable\n                            \n                            \n                                sessionStorageAvailable\n                            \n                            \n                                storageAvailable\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/services/src/lib/window-ref/windowRef.service.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            localStorageAvailable\n                        \n                        \n                    \n                \n            \n            \n                \nlocalStorageAvailable()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sessionStorageAvailable\n                        \n                        \n                    \n                \n            \n            \n                \nsessionStorageAvailable()\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            storageAvailable\n                        \n                        \n                    \n                \n            \n            \n                \nstorageAvailable(type: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _globalSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onbeforeunload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in libs/services/src/lib/window-ref/windowRef.service.ts:57\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, InjectionToken } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nexport function _window(): any {\n  return window;\n}\n\n// tslint:disable-next-line:variable-name allow-pascal-case\nexport const SPWindow: InjectionToken = new InjectionToken('SPWindowToken');\n\nexport abstract class AbstractSPWindowRef {\n  abstract get nativeWindow(): any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IxWindowRefService extends AbstractSPWindowRef {\n  private _globalSubscription: Subscription;\n  private _resizing = false;\n\n  onbeforeunload: Subject;\n  resize: Subject;\n\n  constructor() {\n    super();\n\n    this.onbeforeunload = new Subject();\n    this.resize = new Subject();\n\n    this.nativeWindow.addEventListener('onbeforeunload', () => {\n      this.onbeforeunload.next('onbeforeunload');\n    });\n\n    this._globalSubscription = fromEvent(this.nativeWindow, 'resize').subscribe(() => {\n      // way to prevent the resize event from triggering the match\n      // media if there is already one event running already.\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this.resize.next('resize');\n          this._resizing = false;\n        }, 100);\n      }\n    });\n\n    this.resize.next('resize');\n  }\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\n  storageAvailable(type: string): boolean {\n    const storage = _window()[type];\n    try {\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return (\n        e instanceof DOMException &&\n        // everything except Firefox\n        (e.code === 22 ||\n          // Firefox\n          e.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          e.name === 'QuotaExceededError' ||\n          // Firefox\n          e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage.length !== 0\n      );\n    }\n  }\n\n  localStorageAvailable(): boolean {\n    return this.storageAvailable('localStorage');\n  }\n\n  sessionStorageAvailable(): boolean {\n    return this.storageAvailable('sessionStorage');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockSpWindow.html":{"url":"classes/MockSpWindow.html","title":"class - MockSpWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockSpWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/services/src/lib/window-ref/windowRef.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _matchMedia\n                            \n                            \n                                windowProps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setMatchMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _matchMedia\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.mock.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windowProps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    build: '',\n    ga: () => {},\n    matchMedia: () => {\n      return {\n        matches: this._matchMedia,\n      };\n    },\n    // tslint:disable-next-line\n    open: () => {\n      return {\n        location: {\n          reload: () => {},\n        },\n      };\n    },\n    location: {\n      href: 'www.test.com#testTag?param1=1&param2=2',\n    },\n\n    resize: () => {\n      /* noop */\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/services/src/lib/window-ref/windowRef.mock.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchMedia(_val)\n                \n            \n\n\n            \n                \n                    Defined in libs/services/src/lib/window-ref/windowRef.mock.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in libs/services/src/lib/window-ref/windowRef.mock.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { IxWindowRefService } from './windowRef.service';\n\nexport class MockSpWindow {\n  private _matchMedia = false;\n\n  windowProps: any = {\n    build: '',\n    ga: () => {},\n    matchMedia: () => {\n      return {\n        matches: this._matchMedia,\n      };\n    },\n    // tslint:disable-next-line\n    open: () => {\n      return {\n        location: {\n          reload: () => {},\n        },\n      };\n    },\n    location: {\n      href: 'www.test.com#testTag?param1=1&param2=2',\n    },\n\n    resize: () => {\n      /* noop */\n    },\n  };\n\n  get nativeWindow() {\n    const that = this;\n    return that.windowProps;\n  }\n\n  setMatchMedia(_val) {\n    this._matchMedia = _val;\n  }\n}\n\nfunction createSpWindowServiceMock() {\n  const mockInstance = new MockSpWindow();\n  const provider = {\n    // tslint:disable-next-line\n    provide: IxWindowRefService,\n    useValue: mockInstance,\n  };\n\n  return {\n    mock: mockInstance,\n    provider: provider,\n  };\n}\n\nexport { createSpWindowServiceMock };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/services/src/lib/services.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n            \n            class\n            CheckContentLoaded\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n            \n            interface\n            CheckContentConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n            \n            interface\n            Content\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n            \n            variable\n            initialCheckContentConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n            \n            injectable\n            ContentLoadedService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n            \n            function\n            _contentLoadedFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n            \n            variable\n            CONTENT_LOADED_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/on-render-complete/ix-on-render-complete.component.ts\n            \n            component\n            IxOnRenderCompleteComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n            \n            injectable\n            IxOnRenderCompleteService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n            \n            function\n            _spOnRenderCompleteFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n            \n            variable\n            IX_ON_RENDER_COMPLETE_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/resize.ts\n            \n            interface\n            DomRectPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/services/src/lib/resize.ts\n            \n            function\n            getResizeProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/resize.ts\n            \n            variable\n            defaultResizeProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.mock.ts\n            \n            class\n            MockSpWindow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.mock.ts\n            \n            function\n            createSpWindowServiceMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.service.ts\n            \n            class\n            AbstractSPWindowRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.service.ts\n            \n            injectable\n            IxWindowRefService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.service.ts\n            \n            function\n            _window\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/services/src/lib/window-ref/windowRef.service.ts\n            \n            variable\n            SPWindow\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.0\n        \n            @angular/cdk : ~8.1.2\n        \n            @angular/common : ^8.0.0\n        \n            @angular/compiler : ^8.0.0\n        \n            @angular/core : ^8.0.0\n        \n            @angular/forms : ^8.0.0\n        \n            @angular/material : ^8.1.2\n        \n            @angular/platform-browser : ^8.0.0\n        \n            @angular/platform-browser-dynamic : ^8.0.0\n        \n            @angular/router : ^8.0.0\n        \n            @nrwl/schematics : ^8.4.4\n        \n            core-js : ^2.5.4\n        \n            d3-selection : ^1.4.0\n        \n            firebase : ^6.3.5\n        \n            firebaseui : ^4.1.0\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _contentLoadedFactory   (libs/.../content-loaded.module.ts)\n                        \n                        \n                            _spOnRenderCompleteFactory   (libs/.../ix-on-render-complete.service.ts)\n                        \n                        \n                            _window   (libs/.../windowRef.service.ts)\n                        \n                        \n                            createSpWindowServiceMock   (libs/.../windowRef.mock.ts)\n                        \n                        \n                            getResizeProperties   (libs/.../resize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            _contentLoadedFactory\n                        \n                        \n                    \n                \n            \n            \n                \n_contentLoadedFactory(a)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContentLoadedService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            _spOnRenderCompleteFactory\n                        \n                        \n                    \n                \n            \n            \n                \n_spOnRenderCompleteFactory(parentDispatcher)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentDispatcher\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IxOnRenderCompleteService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/services/src/lib/window-ref/windowRef.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            _window\n                        \n                        \n                    \n                \n            \n            \n                \n_window()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    libs/services/src/lib/window-ref/windowRef.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSpWindowServiceMock\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSpWindowServiceMock()\n                \n            \n\n\n\n\n        \n    \n    libs/services/src/lib/resize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getResizeProperties\n                        \n                        \n                    \n                \n            \n            \n                \ngetResizeProperties(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DomRectPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSemver\nUse yarn commands to increments the version of project. This will update package.json files in the CDK, Material, Icons, Docs App, and assets folder.\nThe package.json at the root of this repo contains the version which incrementing semver is based.\nIf the root package.json version is 6.2.3:\nyarn run bump --ver=8.0.1 updates version to 8.0.1yarn bump.major updates version to 7.0.0yarn bump.minor updates version to 6.3.0yarn bump.patch updates version to 6.2.4    \nBumping alpha, beta, and rc only appends or increments the current version with something like -rc.1, -alpha.1, or -beta.1. If you want to increment the major, minor, or patch versions as well, run those commands first.\nyarn bump.alpha updates version to 6.2.3-alpha.1yarn bump.beta updates version to 6.2.3-beta.1yarn bump.rc updates version to 6.2.3-rc.1    \nReleasing Projects\nI have tried to automate this process with a script, but my two-factor authentication token for GitHub is not recognized when running npm publish inside of a script. Any help is appreciated.\n\nBump semver.\n\nBuild projects by runing yarn build.projects.\n\nIn the dist/ path, cd into each project's directory containing it's package.json file, \nand run npm publish. Do not do this for the Icon's directory.\n cd ./dist/@uiux/cdk\n npm publish\n\n cd ./dist/@uiux/material\n npm publish\n\n cd ./projects/uiux/icons\n npm publish\n\n\nIxUtilities\nThis project was generated using Nx.\n\n\n&#x1F50E; Nx is a set of Extensible Dev Tools for Monorepos.\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are some plugins which you can add to your workspace:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are sharable across libraries and applications. They can be imported from @ix-utilities/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentLoadedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IxOnRenderCompleteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IxWindowRefModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IxOnRenderCompleteModule\n\n\n\ncluster_IxOnRenderCompleteModule_declarations\n\n\n\ncluster_IxOnRenderCompleteModule_exports\n\n\n\ncluster_IxWindowRefModule\n\n\n\ncluster_IxWindowRefModule_providers\n\n\n\n\nIxOnRenderCompleteComponent\n\nIxOnRenderCompleteComponent\n\n\n\nIxOnRenderCompleteModule\n\nIxOnRenderCompleteModule\n\nIxOnRenderCompleteModule -->\n\nIxOnRenderCompleteComponent->IxOnRenderCompleteModule\n\n\n\n\n\nIxOnRenderCompleteComponent \n\nIxOnRenderCompleteComponent \n\nIxOnRenderCompleteComponent  -->\n\nIxOnRenderCompleteModule->IxOnRenderCompleteComponent \n\n\n\n\n\nIxWindowRefService\n\nIxWindowRefService\n\n\n\nIxWindowRefModule\n\nIxWindowRefModule\n\nIxWindowRefModule -->\n\nIxWindowRefService->IxWindowRefModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTENT_LOADED_PROVIDER   (libs/.../content-loaded.module.ts)\n                        \n                        \n                            defaultResizeProperties   (libs/.../resize.ts)\n                        \n                        \n                            initialCheckContentConfig   (libs/.../check-content-loaded.ts)\n                        \n                        \n                            IX_ON_RENDER_COMPLETE_PROVIDER   (libs/.../ix-on-render-complete.service.ts)\n                        \n                        \n                            SPWindow   (libs/.../windowRef.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/services/src/lib/check-content-loaded/content-loaded.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTENT_LOADED_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: ContentLoadedService,\n  deps: [[new Optional(), new SkipSelf(), ContentLoadedService]],\n  useFactory: _contentLoadedFactory,\n}\n                        \n                    \n\n\n            \n        \n\n    libs/services/src/lib/resize.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultResizeProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRectReadOnly\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  toJSON: () => {\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    libs/services/src/lib/check-content-loaded/check-content-loaded.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialCheckContentConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CheckContentConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  limit: 20,\n  interval: 100,\n  timeout: 2000,\n}\n                        \n                    \n\n\n            \n        \n\n    libs/services/src/lib/on-render-complete/ix-on-render-complete.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IX_ON_RENDER_COMPLETE_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: IxOnRenderCompleteService,\n    useFactory: _spOnRenderCompleteFactory,\n    // tslint:disable-next-line\n    deps: [[new Optional(), new SkipSelf(), IxOnRenderCompleteService]],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    libs/services/src/lib/window-ref/windowRef.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SPWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('SPWindowToken')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

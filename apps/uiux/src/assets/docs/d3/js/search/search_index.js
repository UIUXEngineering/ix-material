var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/D3Component.html",[0,0.808,1,1.276]],["body/components/D3Component.html",[0,1.359,1,2.264,2,3.28,3,0.754,4,0.578,5,2.557,6,2.557,7,0.424,8,1.929,9,3.28,10,3.622,11,2.557,12,3.622,13,2.732,14,1.517,15,3.28,16,3.622,17,0.959,18,2.475,19,3.821,20,2.146,21,1.944,22,2.557,23,2.557,24,1.929,25,0.09,26,1.929,27,0.754,28,1.206,29,2.557,30,0.754,31,0.287,32,1.929,33,3.28,34,3.28,35,2.557,36,3.821,37,2.557,38,2.475,39,2.557,40,2.557,41,0.052,42,0.067,43,0.052]],["title/modules/D3Module.html",[44,1.624,45,1.276]],["body/modules/D3Module.html",[3,0.929,4,0.712,7,0.523,25,0.089,27,1.101,28,1.487,30,0.929,31,0.354,41,0.065,42,0.076,43,0.065,45,2.212,46,1.868,47,3.152,48,3.733,49,3.733,50,2.378,51,3.152]],["title/injectables/D3Service.html",[52,1.015,53,1.276]],["body/injectables/D3Service.html",[3,0.923,4,0.708,7,0.519,20,2.349,21,1.855,25,0.089,27,0.923,28,1.477,30,0.923,31,0.352,41,0.064,42,0.076,43,0.064,52,1.753,53,2.203,54,3.13,55,2.361,56,3.13,57,3.13,58,2.361]],["title/interfaces/IxD3CanvasDimension.html",[59,0.635,60,0.808]],["body/interfaces/IxD3CanvasDimension.html",[3,0.451,4,0.346,7,0.254,14,0.574,17,0.574,25,0.092,27,0.676,30,0.811,31,0.172,41,0.031,42,0.047,43,0.031,59,0.676,60,1.146,61,0.907,62,0.722,63,1.359,64,2.036,65,1.939,66,2.036,67,2.296,68,1.297,69,1.146,70,0.907,71,0.907,72,1.359,73,0.907,74,0.907,75,1.441,76,1.63,77,1.63,78,1.63,79,1.63,80,0.574,81,0.907,82,1.62,83,1.359,84,1.359,85,1.359,86,2.111,87,0.907,88,0.907,89,0.907,90,1.81,91,0.907,92,1.939,93,0.907,94,1.939,95,0.907,96,1.939,97,0.907,98,1.939,99,0.907,100,1.939,101,0.907,102,2.427,103,1.68,104,0.907,105,0.907,106,0.907,107,0.907,108,0.907,109,0.907,110,0.907,111,0.907,112,0.907,113,1.082,114,1.359,115,0.907,116,0.907,117,0.907,118,0.907,119,0.907,120,0.907,121,0.907,122,0.907,123,0.907,124,0.907,125,0.907,126,0.907,127,0.907,128,1.939,129,0.907,130,0.907,131,0.907,132,1.359,133,1.359,134,1.359,135,1.359,136,1.359,137,0.907,138,0.907,139,1.359,140,0.907,141,0.907,142,0.907,143,0.907,144,1.63,145,1.359,146,0.907,147,1.359,148,0.907,149,0.907,150,0.907,151,0.907]],["title/interfaces/IxD3CanvasMargins.html",[59,0.635,69,0.808]],["body/interfaces/IxD3CanvasMargins.html",[3,0.446,4,0.342,7,0.251,14,0.567,17,0.567,25,0.092,27,0.67,30,0.805,31,0.17,41,0.031,42,0.047,43,0.031,59,0.67,60,1.025,61,0.896,62,0.713,63,1.347,64,1.618,65,1.347,66,1.618,67,2.388,68,1.433,69,1.025,70,0.896,71,0.896,72,1.347,73,0.896,74,0.896,75,1.433,76,2.027,77,2.027,78,2.027,79,2.027,80,0.567,81,0.896,82,1.613,83,1.347,84,1.347,85,1.347,86,2.103,87,0.896,88,0.896,89,0.896,90,1.8,91,0.896,92,1.929,93,0.896,94,1.929,95,0.896,96,1.929,97,0.896,98,1.929,99,0.896,100,1.929,101,0.896,102,2.422,103,1.674,104,0.896,105,0.896,106,0.896,107,0.896,108,0.896,109,0.896,110,0.896,111,0.896,112,0.896,113,1.072,114,1.347,115,0.896,116,0.896,117,0.896,118,0.896,119,0.896,120,0.896,121,0.896,122,0.896,123,0.896,124,0.896,125,0.896,126,0.896,127,0.896,128,1.929,129,0.896,130,0.896,131,0.896,132,1.347,133,1.347,134,1.347,135,1.347,136,1.347,137,0.896,138,0.896,139,1.347,140,0.896,141,0.896,142,0.896,143,0.896,144,1.618,145,1.347,146,0.896,147,1.347,148,0.896,149,0.896,150,0.896,151,0.896]],["title/classes/IxD3Layout.html",[31,0.242,80,0.808]],["body/classes/IxD3Layout.html",[3,0.314,4,0.24,7,0.176,14,0.399,17,0.399,18,1.302,20,0.63,21,2.434,24,2.706,25,0.091,26,2.345,27,0.509,30,0.642,31,0.12,38,2.706,41,0.022,42,0.035,43,0.022,59,0.509,60,1.107,62,0.502,63,1.023,64,1.749,65,1.291,66,1.749,67,1.842,68,1.466,69,0.648,70,0.63,71,0.63,72,1.485,73,0.63,74,0.63,75,1.466,76,1.749,77,1.749,78,1.749,79,1.749,80,0.648,81,1.291,82,1.692,83,1.633,84,1.749,85,1.633,86,2.162,87,1.023,88,1.023,89,1.023,90,1.485,91,0.63,92,1.633,93,0.63,94,1.633,95,0.63,96,1.633,97,0.63,98,1.633,99,0.63,100,1.633,101,0.63,102,2.27,103,1.466,104,0.63,105,0.63,106,0.63,107,0.63,108,0.63,109,0.63,110,1.291,111,1.291,112,0.63,113,0.814,114,1.633,115,0.63,116,1.291,117,0.63,118,1.291,119,0.63,120,0.63,121,1.291,122,0.63,123,1.023,124,1.023,125,1.023,126,0.63,127,0.63,128,1.633,129,1.023,130,1.485,131,0.63,132,1.023,133,1.023,134,1.023,135,1.023,136,1.023,137,1.023,138,1.485,139,1.023,140,0.63,141,0.63,142,0.63,143,1.023,144,1.633,145,1.291,146,0.63,147,1.023,148,0.63,149,0.63,150,0.63,151,0.63,152,1.064,153,1.726,154,1.726,155,1.726,156,1.726,157,1.726,158,1.726,159,3.588,160,3.588,161,2.506,162,2.506,163,1.064,164,1.064,165,1.064,166,1.064,167,1.064,168,1.064,169,1.064,170,1.726,171,1.064,172,1.064,173,1.064,174,1.064,175,1.064,176,1.064,177,1.064,178,1.064,179,1.064,180,1.064,181,1.064,182,1.064,183,1.064,184,1.064,185,1.064,186,1.064,187,1.064,188,1.064,189,1.064,190,1.064,191,1.064,192,1.064,193,1.064,194,1.064,195,1.064,196,1.064,197,1.064,198,1.064,199,1.064,200,1.064,201,1.064,202,1.064,203,1.064,204,1.064,205,1.064,206,1.064,207,1.064,208,1.064,209,1.064,210,1.064]],["title/coverage.html",[211,2.209]],["body/coverage.html",[0,1.124,1,1.775,7,0.497,8,2.26,25,0.087,31,0.337,41,0.061,42,0.074,43,0.061,52,1.413,53,1.775,55,2.26,59,1.068,60,1.124,62,1.835,68,1.413,69,1.124,80,1.124,82,1.907,211,2.26,212,2.26,213,2.996,214,2.996,215,2.996,216,2.996,217,2.996,218,2.996,219,2.996,220,2.996,221,2.26,222,2.996,223,2.996]],["title/dependencies.html",[224,1.803,225,1.22]],["body/dependencies.html",[14,1.041,25,0.091,28,1.309,41,0.057,42,0.071,43,0.057,50,2.094,75,1.309,225,1.309,226,2.776,227,4.232,228,2.776,229,3.455,230,2.776,231,2.776,232,2.776,233,3.455,234,3.455,235,2.776,236,2.776,237,2.776,238,2.776,239,2.776,240,2.776,241,2.776,242,2.776,243,2.776,244,2.776,245,2.776,246,2.776,247,2.776,248,2.776,249,2.776,250,2.776,251,2.776,252,2.776,253,2.776,254,2.776]],["title/index.html",[17,0.676,255,1.803,256,1.803]],["body/index.html",[0,0.988,4,0.322,7,0.236,13,1.075,25,0.054,41,0.029,42,0.044,43,0.029,58,1.639,103,0.672,212,1.987,221,1.075,225,0.672,257,2.634,258,2.946,259,2.946,260,2.173,261,2.173,262,3.809,263,2.634,264,1.425,265,2.946,266,2.173,267,1.425,268,1.425,269,1.425,270,1.425,271,3.584,272,1.425,273,1.425,274,1.425,275,1.425,276,1.425,277,1.425,278,2.946,279,3.91,280,2.173,281,1.425,282,3.476,283,1.425,284,1.425,285,1.425,286,1.425,287,1.425,288,1.425,289,1.425,290,1.425,291,1.425,292,1.425,293,1.425,294,1.425,295,1.425,296,1.425,297,2.173,298,1.425,299,1.425,300,1.425,301,1.425,302,1.425,303,1.425,304,1.425,305,1.425,306,3.172,307,1.425,308,1.425,309,1.425,310,1.425,311,1.425,312,1.425,313,1.425,314,1.425,315,2.946,316,1.425,317,1.425,318,1.425,319,2.173,320,1.425,321,1.425,322,1.425,323,1.425,324,1.425,325,1.425,326,2.634,327,3.172,328,3.172,329,1.425,330,2.173,331,1.425,332,3.476,333,1.425,334,1.425,335,2.173,336,1.425,337,2.946,338,1.425,339,1.425,340,2.634,341,1.425,342,1.425,343,1.425,344,1.425,345,1.425,346,1.425,347,1.425,348,1.425,349,2.173,350,3.746,351,1.425,352,1.425,353,2.173,354,2.173,355,1.425,356,1.425,357,1.425,358,1.425,359,1.425,360,1.425,361,1.425,362,1.425,363,1.425,364,1.425,365,1.425,366,2.634,367,2.946,368,1.425,369,1.425,370,2.946,371,3.584,372,1.425,373,2.173,374,1.425,375,3.172,376,1.425,377,1.425,378,3.172,379,1.425,380,1.425,381,2.173,382,1.425,383,1.425,384,3.91,385,1.425,386,1.425,387,1.425,388,1.425,389,1.425,390,1.425,391,1.425,392,1.425,393,1.425,394,1.425,395,1.425,396,1.425,397,1.425,398,3.476,399,2.173,400,2.634,401,1.425,402,2.173,403,1.425,404,1.425,405,1.425,406,2.173,407,1.425,408,1.425,409,1.425,410,1.425,411,1.425,412,1.425,413,2.173,414,1.425,415,1.425,416,1.425,417,1.425,418,1.425,419,2.634,420,1.425,421,1.425,422,1.425,423,1.425,424,1.425,425,1.425,426,1.425,427,1.425,428,2.634,429,3.343,430,2.946,431,2.173,432,1.425,433,1.425,434,2.173,435,3.343,436,1.425,437,1.425,438,1.425,439,1.425,440,1.425,441,1.075,442,1.425,443,1.425,444,1.425,445,1.425,446,1.425,447,1.425]],["title/modules.html",[46,1.735]],["body/modules.html",[25,0.08,41,0.069,42,0.08,43,0.069,45,2,46,2,441,2.546,448,3.375,449,3.375]],["title/overview.html",[450,2.209]],["body/overview.html",[0,1.191,25,0.077,31,0.357,32,2.394,41,0.065,42,0.077,43,0.065,44,2.827,52,1.497,61,1.881,113,1.497,225,1.497,450,2.394,451,3.174,452,3.174,453,3.174,454,3.174,455,3.748,456,3.174,457,3.174,458,4.12]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":82,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["0.9.1",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":458,"title":{},"body":{"overview.html":{}}}],["1.4.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":358,"title":{},"body":{"index.html":{}}}],["100",{"_index":150,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["2",{"_index":113,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"overview.html":{}}}],["2.0.8",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":148,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["6.2.3",{"_index":278,"title":{},"body":{"index.html":{}}}],["6.2.4",{"_index":289,"title":{},"body":{"index.html":{}}}],["6.3.0yarn",{"_index":287,"title":{},"body":{"index.html":{}}}],["6.3.5",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["7.0.0yarn",{"_index":285,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["8.0.1yarn",{"_index":283,"title":{},"body":{"index.html":{}}}],["8.1.2",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["8.4.4",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["_dimensions",{"_index":81,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["above",{"_index":402,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":157,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["actual_component",{"_index":40,"title":{},"body":{"components/D3Component.html":{}}}],["add",{"_index":371,"title":{},"body":{"index.html":{}}}],["adding",{"_index":365,"title":{},"body":{"index.html":{}}}],["affected",{"_index":434,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":438,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":433,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":291,"title":{},"body":{"index.html":{}}}],["alpha.1",{"_index":298,"title":{},"body":{"index.html":{}}}],["alpha.1yarn",{"_index":310,"title":{},"body":{"index.html":{}}}],["angular",{"_index":383,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":50,"title":{},"body":{"modules/D3Module.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":271,"title":{},"body":{"index.html":{}}}],["append('svg",{"_index":132,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["appendbounds",{"_index":138,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["appends",{"_index":294,"title":{},"body":{"index.html":{}}}],["appendwrapper",{"_index":153,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["appendwrapper(selection",{"_index":137,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["application",{"_index":399,"title":{},"body":{"index.html":{}}}],["applications",{"_index":375,"title":{},"body":{"index.html":{}}}],["appreciated",{"_index":331,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":423,"title":{},"body":{"index.html":{}}}],["assets",{"_index":272,"title":{},"body":{"index.html":{}}}],["atleast",{"_index":72,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["atleast(0",{"_index":87,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["attr('height",{"_index":135,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["attr('width",{"_index":133,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["authentication",{"_index":322,"title":{},"body":{"index.html":{}}}],["automate",{"_index":317,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":417,"title":{},"body":{"index.html":{}}}],["available",{"_index":448,"title":{},"body":{"modules.html":{}}}],["based",{"_index":277,"title":{},"body":{"index.html":{}}}],["below",{"_index":382,"title":{},"body":{"index.html":{}}}],["beta",{"_index":292,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":299,"title":{},"body":{"index.html":{}}}],["beta.1yarn",{"_index":312,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":452,"title":{},"body":{"overview.html":{}}}],["bottom",{"_index":78,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["bottom(val",{"_index":108,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["boundedheight",{"_index":114,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["boundedheight(boundedheight",{"_index":115,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["boundedwidth",{"_index":110,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["bounds",{"_index":85,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["browse",{"_index":449,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":332,"title":{},"body":{"index.html":{}}}],["build.projects",{"_index":334,"title":{},"body":{"index.html":{}}}],["bump",{"_index":280,"title":{},"body":{"index.html":{}}}],["bump.alpha",{"_index":309,"title":{},"body":{"index.html":{}}}],["bump.beta",{"_index":311,"title":{},"body":{"index.html":{}}}],["bump.major",{"_index":284,"title":{},"body":{"index.html":{}}}],["bump.minor",{"_index":286,"title":{},"body":{"index.html":{}}}],["bump.patch",{"_index":288,"title":{},"body":{"index.html":{}}}],["bump.rc",{"_index":313,"title":{},"body":{"index.html":{}}}],["bumping",{"_index":290,"title":{},"body":{"index.html":{}}}],["calc",{"_index":147,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["capabilities",{"_index":366,"title":{},"body":{"index.html":{}}}],["cd",{"_index":337,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":267,"title":{},"body":{"index.html":{}}}],["centerboundedheight",{"_index":116,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["centerboundedwidth",{"_index":111,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["change",{"_index":419,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{"classes/IxD3Layout.html":{}},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":152,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["code",{"_index":420,"title":{},"body":{"index.html":{}}}],["commands",{"_index":260,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":49,"title":{},"body":{"modules/D3Module.html":{}}}],["component",{"_index":0,"title":{"components/D3Component.html":{}},"body":{"components/D3Component.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":37,"title":{},"body":{"components/D3Component.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/D3Component.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"components/D3Component.html":{},"injectables/D3Service.html":{},"classes/IxD3Layout.html":{}}}],["constructor(dim",{"_index":88,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["containing",{"_index":341,"title":{},"body":{"index.html":{}}}],["contains",{"_index":275,"title":{},"body":{"index.html":{}}}],["core",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":211,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":403,"title":{},"body":{"index.html":{}}}],["creates",{"_index":123,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["createwrapperandbounds",{"_index":154,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["createwrapperandbounds(wrapperselector",{"_index":125,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["current",{"_index":295,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":437,"title":{},"body":{"index.html":{}}}],["d3",{"_index":14,"title":{},"body":{"components/D3Component.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"dependencies.html":{}}}],["d3component",{"_index":1,"title":{"components/D3Component.html":{}},"body":{"components/D3Component.html":{},"coverage.html":{}}}],["d3module",{"_index":45,"title":{"modules/D3Module.html":{}},"body":{"modules/D3Module.html":{},"modules.html":{}}}],["d3service",{"_index":53,"title":{"injectables/D3Service.html":{}},"body":{"injectables/D3Service.html":{},"coverage.html":{}}}],["declarations",{"_index":451,"title":{},"body":{"overview.html":{}}}],["default",{"_index":161,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["defined",{"_index":21,"title":{},"body":{"components/D3Component.html":{},"injectables/D3Service.html":{},"classes/IxD3Layout.html":{}}}],["dep",{"_index":440,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dev",{"_index":353,"title":{},"body":{"index.html":{}}}],["developing",{"_index":372,"title":{},"body":{"index.html":{}}}],["development",{"_index":412,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":380,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":443,"title":{},"body":{"index.html":{}}}],["different",{"_index":373,"title":{},"body":{"index.html":{}}}],["dim",{"_index":89,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["directive",{"_index":35,"title":{},"body":{"components/D3Component.html":{}}}],["directives",{"_index":39,"title":{},"body":{"components/D3Component.html":{}}}],["directory",{"_index":340,"title":{},"body":{"index.html":{}}}],["dist",{"_index":335,"title":{},"body":{"index.html":{}}}],["dist/@uiux/cdk",{"_index":344,"title":{},"body":{"index.html":{}}}],["dist/@uiux/material",{"_index":345,"title":{},"body":{"index.html":{}}}],["docs",{"_index":270,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":212,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/D3Component.html":{}}}],["dynamic",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":436,"title":{},"body":{"index.html":{}}}],["each",{"_index":338,"title":{},"body":{"index.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/D3Component.html":{}}}],["end",{"_index":435,"title":{},"body":{"index.html":{}}}],["etc",{"_index":379,"title":{},"body":{"index.html":{}}}],["execute",{"_index":430,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["exports",{"_index":454,"title":{},"body":{"overview.html":{}}}],["express",{"_index":394,"title":{},"body":{"index.html":{}}}],["extensible",{"_index":352,"title":{},"body":{"index.html":{}}}],["factor",{"_index":321,"title":{},"body":{"index.html":{}}}],["features",{"_index":362,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":266,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["firebaseui",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["first",{"_index":308,"title":{},"body":{"index.html":{}}}],["flag",{"_index":426,"title":{},"body":{"index.html":{}}}],["folder",{"_index":273,"title":{},"body":{"index.html":{}}}],["framework",{"_index":389,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":390,"title":{},"body":{"index.html":{}}}],["function",{"_index":164,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["further",{"_index":444,"title":{},"body":{"index.html":{}}}],["g",{"_index":400,"title":{},"body":{"index.html":{}}}],["generate",{"_index":398,"title":{},"body":{"index.html":{}}}],["generated",{"_index":348,"title":{},"body":{"index.html":{}}}],["generating",{"_index":377,"title":{},"body":{"index.html":{}}}],["getbottom",{"_index":189,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getboundedheight",{"_index":201,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getboundedwidth",{"_index":197,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getcenterboundedheight",{"_index":205,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getcenterboundedwidth",{"_index":199,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getheight",{"_index":177,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getleft",{"_index":193,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getright",{"_index":185,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getting",{"_index":255,"title":{"index.html":{}},"body":{}}],["gettop",{"_index":181,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["gettranlatexaxisbottom",{"_index":209,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["gettranslatebounds",{"_index":207,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["getwidth",{"_index":173,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["github",{"_index":324,"title":{},"body":{"index.html":{}}}],["graph",{"_index":441,"title":{},"body":{"index.html":{},"modules.html":{}}}],["hammerjs",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["hasvalue",{"_index":70,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["height",{"_index":64,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["height(val",{"_index":105,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["help",{"_index":330,"title":{},"body":{"index.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/D3Component.html":{}}}],["http://localhost:4200",{"_index":416,"title":{},"body":{"index.html":{}}}],["icon's",{"_index":343,"title":{},"body":{"index.html":{}}}],["icons",{"_index":269,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"components/D3Component.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["imported",{"_index":409,"title":{},"body":{"index.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/D3Module.html":{}}}],["include",{"_index":376,"title":{},"body":{"index.html":{}}}],["increment",{"_index":301,"title":{},"body":{"index.html":{}}}],["incrementing",{"_index":276,"title":{},"body":{"index.html":{}}}],["increments",{"_index":261,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/D3Component.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["injectable",{"_index":52,"title":{"injectables/D3Service.html":{}},"body":{"injectables/D3Service.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/D3Service.html":{}}}],["inside",{"_index":329,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":363,"title":{},"body":{"index.html":{}}}],["interface",{"_index":59,"title":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{}},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["interfaces",{"_index":61,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"overview.html":{}}}],["it's",{"_index":342,"title":{},"body":{"index.html":{}}}],["ix",{"_index":410,"title":{},"body":{"index.html":{}}}],["ixd3canvasdimension",{"_index":60,"title":{"interfaces/IxD3CanvasDimension.html":{}},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["ixd3canvasmargins",{"_index":69,"title":{"interfaces/IxD3CanvasMargins.html":{}},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["ixd3layout",{"_index":80,"title":{"classes/IxD3Layout.html":{}},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["ixutilities",{"_index":347,"title":{},"body":{"index.html":{}}}],["jest",{"_index":432,"title":{},"body":{"index.html":{}}}],["js",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":446,"title":{},"body":{"index.html":{}}}],["left",{"_index":79,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["left(val",{"_index":109,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/D3Component.html":{},"overview.html":{}}}],["lib",{"_index":13,"title":{},"body":{"components/D3Component.html":{},"index.html":{}}}],["libraries",{"_index":378,"title":{},"body":{"index.html":{}}}],["library",{"_index":406,"title":{},"body":{"index.html":{}}}],["libs/d3/src/lib/d3.component.ts",{"_index":8,"title":{},"body":{"components/D3Component.html":{},"coverage.html":{}}}],["libs/d3/src/lib/d3.component.ts:12",{"_index":22,"title":{},"body":{"components/D3Component.html":{}}}],["libs/d3/src/lib/d3.component.ts:15",{"_index":23,"title":{},"body":{"components/D3Component.html":{}}}],["libs/d3/src/lib/d3.layout.ts",{"_index":62,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["libs/d3/src/lib/d3.layout.ts:103",{"_index":202,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:109",{"_index":204,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:114",{"_index":206,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:118",{"_index":208,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:122",{"_index":210,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:129",{"_index":169,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:136",{"_index":171,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:145",{"_index":168,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:154",{"_index":167,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:161",{"_index":172,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:18",{"_index":163,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:29",{"_index":166,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:30",{"_index":165,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:32",{"_index":158,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:45",{"_index":174,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:49",{"_index":176,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:53",{"_index":178,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:57",{"_index":180,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:61",{"_index":182,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:65",{"_index":184,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:69",{"_index":186,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:73",{"_index":188,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:77",{"_index":190,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:81",{"_index":192,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:85",{"_index":194,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:89",{"_index":196,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:93",{"_index":198,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.layout.ts:99",{"_index":200,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["libs/d3/src/lib/d3.module.ts",{"_index":47,"title":{},"body":{"modules/D3Module.html":{}}}],["libs/d3/src/lib/d3.service.ts",{"_index":55,"title":{},"body":{"injectables/D3Service.html":{},"coverage.html":{}}}],["libs/d3/src/lib/d3.service.ts:6",{"_index":56,"title":{},"body":{"injectables/D3Service.html":{}}}],["major",{"_index":302,"title":{},"body":{"index.html":{}}}],["many",{"_index":369,"title":{},"body":{"index.html":{}}}],["margin",{"_index":65,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["matching",{"_index":42,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":268,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/D3Component.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/D3Component.html":{},"classes/IxD3Layout.html":{}}}],["minor",{"_index":303,"title":{},"body":{"index.html":{}}}],["minute",{"_index":359,"title":{},"body":{"index.html":{}}}],["module",{"_index":44,"title":{"modules/D3Module.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/D3Module.html":{},"modules.html":{}}}],["monorepos",{"_index":355,"title":{},"body":{"index.html":{}}}],["more",{"_index":447,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":404,"title":{},"body":{"index.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/D3Component.html":{},"classes/IxD3Layout.html":{}}}],["navigate",{"_index":415,"title":{},"body":{"index.html":{}}}],["nest",{"_index":392,"title":{},"body":{"index.html":{}}}],["new",{"_index":221,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":384,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":48,"title":{},"body":{"modules/D3Module.html":{}}}],["ngoninit",{"_index":19,"title":{},"body":{"components/D3Component.html":{}}}],["node",{"_index":396,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":124,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["npm",{"_index":327,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":385,"title":{},"body":{"index.html":{}}}],["nrwl/angular:app",{"_index":401,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":407,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":395,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":393,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":397,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":387,"title":{},"body":{"index.html":{}}}],["nrwl/schematics",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["nrwl/web",{"_index":391,"title":{},"body":{"index.html":{}}}],["null",{"_index":84,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["number",{"_index":67,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["nx",{"_index":350,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/D3Component.html":{}}}],["optional",{"_index":160,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["out",{"_index":457,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":450,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":224,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":265,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":159,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["patch",{"_index":304,"title":{},"body":{"index.html":{}}}],["path",{"_index":336,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":370,"title":{},"body":{"index.html":{}}}],["process",{"_index":318,"title":{},"body":{"index.html":{}}}],["prod",{"_index":425,"title":{},"body":{"index.html":{}}}],["production",{"_index":427,"title":{},"body":{"index.html":{}}}],["project",{"_index":263,"title":{},"body":{"index.html":{}}}],["project's",{"_index":339,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":422,"title":{},"body":{"index.html":{}}}],["projects",{"_index":315,"title":{},"body":{"index.html":{}}}],["projects/uiux/icons",{"_index":346,"title":{},"body":{"index.html":{}}}],["properties",{"_index":63,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["providedin",{"_index":57,"title":{},"body":{"injectables/D3Service.html":{}}}],["providers",{"_index":453,"title":{},"body":{"overview.html":{}}}],["publish",{"_index":328,"title":{},"body":{"index.html":{}}}],["quick",{"_index":356,"title":{},"body":{"index.html":{}}}],["rc",{"_index":293,"title":{},"body":{"index.html":{}}}],["rc.1",{"_index":297,"title":{},"body":{"index.html":{}}}],["react",{"_index":386,"title":{},"body":{"index.html":{}}}],["recognized",{"_index":325,"title":{},"body":{"index.html":{}}}],["releasing",{"_index":314,"title":{},"body":{"index.html":{}}}],["reload",{"_index":418,"title":{},"body":{"index.html":{}}}],["repo",{"_index":274,"title":{},"body":{"index.html":{}}}],["reset",{"_index":456,"title":{},"body":{"overview.html":{}}}],["result",{"_index":41,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":43,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":102,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["returns",{"_index":24,"title":{},"body":{"components/D3Component.html":{},"classes/IxD3Layout.html":{}}}],["right",{"_index":77,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["right(val",{"_index":107,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["root",{"_index":58,"title":{},"body":{"injectables/D3Service.html":{},"index.html":{}}}],["run",{"_index":279,"title":{},"body":{"index.html":{}}}],["runing",{"_index":333,"title":{},"body":{"index.html":{}}}],["running",{"_index":326,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":405,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":421,"title":{},"body":{"index.html":{}}}],["script",{"_index":319,"title":{},"body":{"index.html":{}}}],["see",{"_index":442,"title":{},"body":{"index.html":{}}}],["select",{"_index":74,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["select(wrapperselector",{"_index":131,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["selection",{"_index":75,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"dependencies.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/D3Component.html":{}}}],["selectwrapper",{"_index":155,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["selectwrapper(wrapperselector",{"_index":129,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["semver",{"_index":257,"title":{},"body":{"index.html":{}}}],["serve",{"_index":414,"title":{},"body":{"index.html":{}}}],["server",{"_index":413,"title":{},"body":{"index.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"index.html":{}}}],["setbottom(val",{"_index":191,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["setboundedheight(boundedheight",{"_index":203,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["setheight(val",{"_index":179,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["setleft(val",{"_index":195,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["setright(val",{"_index":187,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["settop(val",{"_index":183,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["setwidth(val",{"_index":175,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["sharable",{"_index":408,"title":{},"body":{"index.html":{}}}],["showing",{"_index":361,"title":{},"body":{"index.html":{}}}],["something",{"_index":296,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/D3Component.html":{},"modules/D3Module.html":{},"injectables/D3Service.html":{},"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"index.html":{}}}],["start",{"_index":357,"title":{},"body":{"index.html":{}}}],["started",{"_index":256,"title":{"index.html":{}},"body":{}}],["statements",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":424,"title":{},"body":{"index.html":{}}}],["string",{"_index":130,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["style('transform",{"_index":141,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["styles",{"_index":29,"title":{},"body":{"components/D3Component.html":{}}}],["supports",{"_index":368,"title":{},"body":{"index.html":{}}}],["table",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":15,"title":{},"body":{"components/D3Component.html":{}}}],["ternary",{"_index":71,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["test",{"_index":381,"title":{},"body":{"index.html":{}}}],["tests",{"_index":429,"title":{},"body":{"index.html":{}}}],["this._dimensions.height",{"_index":92,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this._dimensions.margin.bottom",{"_index":98,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this._dimensions.margin.left",{"_index":100,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this._dimensions.margin.right",{"_index":96,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this._dimensions.margin.top",{"_index":94,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this._dimensions.width",{"_index":90,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.appendbounds",{"_index":127,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.height",{"_index":93,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.margin.bottom",{"_index":99,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.margin.left",{"_index":101,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.margin.right",{"_index":97,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.margin.top",{"_index":95,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.atleast(dim.width",{"_index":91,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.boundedheight",{"_index":117,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.boundedwidth",{"_index":112,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.bounds",{"_index":139,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.height",{"_index":136,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.selectwrapper(wrapperselector",{"_index":126,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.top}px",{"_index":120,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.translatebounds",{"_index":142,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.width",{"_index":134,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.wrapper",{"_index":128,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["this.wrapper.append('g",{"_index":140,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["those",{"_index":307,"title":{},"body":{"index.html":{}}}],["token",{"_index":323,"title":{},"body":{"index.html":{}}}],["tools",{"_index":354,"title":{},"body":{"index.html":{}}}],["top",{"_index":76,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["top(val",{"_index":106,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["tranlatexaxisbottom",{"_index":121,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["translate",{"_index":146,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["translate(${this.left}px",{"_index":119,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["translatebounds",{"_index":118,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["translatetooltip",{"_index":156,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["translatetooltip(x",{"_index":143,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["translatey(${this.boundedheight}px",{"_index":122,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/D3Component.html":{}}}],["tried",{"_index":316,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":364,"title":{},"body":{"index.html":{}}}],["two",{"_index":320,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{},"coverage.html":{}}}],["types",{"_index":374,"title":{},"body":{"index.html":{}}}],["uiux/fn",{"_index":73,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["understand",{"_index":439,"title":{},"body":{"index.html":{}}}],["unit",{"_index":428,"title":{},"body":{"index.html":{}}}],["update",{"_index":264,"title":{},"body":{"index.html":{}}}],["updates",{"_index":282,"title":{},"body":{"index.html":{}}}],["use",{"_index":258,"title":{},"body":{"index.html":{}}}],["using",{"_index":349,"title":{},"body":{"index.html":{}}}],["utilities/mylib",{"_index":411,"title":{},"body":{"index.html":{}}}],["val",{"_index":86,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["value",{"_index":162,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/D3Component.html":{}}}],["ver=8.0.1",{"_index":281,"title":{},"body":{"index.html":{}}}],["version",{"_index":262,"title":{},"body":{"index.html":{}}}],["versions",{"_index":305,"title":{},"body":{"index.html":{}}}],["via",{"_index":431,"title":{},"body":{"index.html":{}}}],["video",{"_index":360,"title":{},"body":{"index.html":{}}}],["visit",{"_index":445,"title":{},"body":{"index.html":{}}}],["void",{"_index":26,"title":{},"body":{"components/D3Component.html":{},"classes/IxD3Layout.html":{}}}],["want",{"_index":300,"title":{},"body":{"index.html":{}}}],["web",{"_index":388,"title":{},"body":{"index.html":{}}}],["well",{"_index":306,"title":{},"body":{"index.html":{}}}],["width",{"_index":66,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["width(val",{"_index":104,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["works",{"_index":16,"title":{},"body":{"components/D3Component.html":{}}}],["workspace",{"_index":367,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":83,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["wrapperselector",{"_index":170,"title":{},"body":{"classes/IxD3Layout.html":{}}}],["x",{"_index":145,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["x1f50e",{"_index":351,"title":{},"body":{"index.html":{}}}],["x}px",{"_index":149,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["y",{"_index":144,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["yarn",{"_index":259,"title":{},"body":{"index.html":{}}}],["y}px",{"_index":151,"title":{},"body":{"interfaces/IxD3CanvasDimension.html":{},"interfaces/IxD3CanvasMargins.html":{},"classes/IxD3Layout.html":{}}}],["zone.js",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":455,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/D3Component.html":{"url":"components/D3Component.html","title":"component - D3Component","body":"\n                   \n\n\n\n\n\n  Components\n  D3Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/d3/src/lib/d3.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-d3\n            \n\n\n\n            \n                template\n                \n  d3 works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/d3/src/lib/d3.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-d3',\n  template: `\n    \n      d3 works!\n    \n  `,\n  styles: [],\n})\nexport class D3Component implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  d3 works!'\n    var COMPONENTS = [{'name': 'D3Component', 'selector': 'lib-d3'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'D3Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/D3Module.html":{"url":"modules/D3Module.html","title":"module - D3Module","body":"\n                   \n\n\n\n\n    Modules\n    D3Module\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/d3/src/lib/d3.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class D3Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/D3Service.html":{"url":"injectables/D3Service.html","title":"injectable - D3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  D3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/d3/src/lib/d3.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/d3/src/lib/d3.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class D3Service {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IxD3CanvasDimension.html":{"url":"interfaces/IxD3CanvasDimension.html","title":"interface - IxD3CanvasDimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IxD3CanvasDimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/d3/src/lib/d3.layout.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        margin\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         IxD3CanvasMargins\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IxD3CanvasMargins\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { hasValue, ternary, atLeast } from '@uiux/fn';\nimport { select, Selection } from 'd3-selection';\n\nexport interface IxD3CanvasMargins {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport interface IxD3CanvasDimension {\n  width: number;\n  height: number;\n  margin: IxD3CanvasMargins;\n}\n\nexport class IxD3Layout {\n  _dimensions: IxD3CanvasDimension = {\n    width: 0,\n    height: 0,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  };\n\n  wrapper = null;\n  bounds = null;\n\n  atLeast: (val) => number = atLeast(0);\n\n  constructor(dim: IxD3CanvasDimension) {\n    if (dim) {\n      this._dimensions.width = this.atLeast(dim.width);\n      this._dimensions.height = this.atLeast(dim.height);\n      this._dimensions.margin.top = this.atLeast(dim.margin.top);\n      this._dimensions.margin.right = this.atLeast(dim.margin.right);\n      this._dimensions.margin.bottom = this.atLeast(dim.margin.bottom);\n      this._dimensions.margin.left = this.atLeast(dim.margin.left);\n    }\n  }\n\n  get width() {\n    return this._dimensions.width;\n  }\n\n  set width(val) {\n    this._dimensions.width = val;\n  }\n\n  get height() {\n    return this._dimensions.height;\n  }\n\n  set height(val) {\n    this._dimensions.height = val;\n  }\n\n  get top() {\n    return this._dimensions.margin.top;\n  }\n\n  set top(val) {\n    this._dimensions.margin.top = val;\n  }\n\n  get right() {\n    return this._dimensions.margin.right;\n  }\n\n  set right(val) {\n    this._dimensions.margin.right = val;\n  }\n\n  get bottom() {\n    return this._dimensions.margin.bottom;\n  }\n\n  set bottom(val) {\n    this._dimensions.margin.bottom = val;\n  }\n\n  get left() {\n    return this._dimensions.margin.left;\n  }\n\n  set left(val) {\n    this._dimensions.margin.left = val;\n  }\n\n  get boundedWidth() {\n    return this._dimensions.width\n      - this._dimensions.margin.left\n      - this._dimensions.margin.right;\n  }\n\n  get centerBoundedWidth() {\n    return this.boundedWidth / 2;\n  }\n\n  get boundedHeight() {\n    return this._dimensions.height\n      - this._dimensions.margin.top\n      - this._dimensions.margin.bottom;\n  }\n\n  set boundedHeight(boundedHeight) {\n    this._dimensions.height =\n      boundedHeight + this._dimensions.margin.top + this._dimensions.margin.bottom;\n  }\n\n  get centerBoundedHeight() {\n    return this.boundedHeight / 2;\n  }\n\n  get translateBounds() {\n    return `translate(${this.left}px, ${this.top}px)`;\n  }\n\n  get tranlateXAxisBottom() {\n    return `translateY(${this.boundedHeight}px`;\n  }\n\n  /**\n   * Creates Wrapper and Bounds nodes\n   */\n  createWrapperAndBounds(wrapperSelector) {\n    this.selectWrapper(wrapperSelector);\n    this.appendBounds();\n\n    return this.wrapper;\n  }\n\n  selectWrapper(wrapperSelector: string) {\n    this.wrapper = select(wrapperSelector)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendWrapper(selection: Selection) {\n    this.wrapper = selection\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendBounds() {\n    this.bounds = this.wrapper.append('g')\n      .style('transform', this.translateBounds);\n\n    return this.bounds;\n  }\n\n  translateToolTip(x, y) {\n    x = x + this._dimensions.margin.left;\n    y = y + this._dimensions.margin.right;\n    return `translate(\n            calc( -50% + ${x}px),\n            calc(-100% + ${y}px)\n        )`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IxD3CanvasMargins.html":{"url":"interfaces/IxD3CanvasMargins.html","title":"interface - IxD3CanvasMargins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IxD3CanvasMargins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/d3/src/lib/d3.layout.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { hasValue, ternary, atLeast } from '@uiux/fn';\nimport { select, Selection } from 'd3-selection';\n\nexport interface IxD3CanvasMargins {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport interface IxD3CanvasDimension {\n  width: number;\n  height: number;\n  margin: IxD3CanvasMargins;\n}\n\nexport class IxD3Layout {\n  _dimensions: IxD3CanvasDimension = {\n    width: 0,\n    height: 0,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  };\n\n  wrapper = null;\n  bounds = null;\n\n  atLeast: (val) => number = atLeast(0);\n\n  constructor(dim: IxD3CanvasDimension) {\n    if (dim) {\n      this._dimensions.width = this.atLeast(dim.width);\n      this._dimensions.height = this.atLeast(dim.height);\n      this._dimensions.margin.top = this.atLeast(dim.margin.top);\n      this._dimensions.margin.right = this.atLeast(dim.margin.right);\n      this._dimensions.margin.bottom = this.atLeast(dim.margin.bottom);\n      this._dimensions.margin.left = this.atLeast(dim.margin.left);\n    }\n  }\n\n  get width() {\n    return this._dimensions.width;\n  }\n\n  set width(val) {\n    this._dimensions.width = val;\n  }\n\n  get height() {\n    return this._dimensions.height;\n  }\n\n  set height(val) {\n    this._dimensions.height = val;\n  }\n\n  get top() {\n    return this._dimensions.margin.top;\n  }\n\n  set top(val) {\n    this._dimensions.margin.top = val;\n  }\n\n  get right() {\n    return this._dimensions.margin.right;\n  }\n\n  set right(val) {\n    this._dimensions.margin.right = val;\n  }\n\n  get bottom() {\n    return this._dimensions.margin.bottom;\n  }\n\n  set bottom(val) {\n    this._dimensions.margin.bottom = val;\n  }\n\n  get left() {\n    return this._dimensions.margin.left;\n  }\n\n  set left(val) {\n    this._dimensions.margin.left = val;\n  }\n\n  get boundedWidth() {\n    return this._dimensions.width\n      - this._dimensions.margin.left\n      - this._dimensions.margin.right;\n  }\n\n  get centerBoundedWidth() {\n    return this.boundedWidth / 2;\n  }\n\n  get boundedHeight() {\n    return this._dimensions.height\n      - this._dimensions.margin.top\n      - this._dimensions.margin.bottom;\n  }\n\n  set boundedHeight(boundedHeight) {\n    this._dimensions.height =\n      boundedHeight + this._dimensions.margin.top + this._dimensions.margin.bottom;\n  }\n\n  get centerBoundedHeight() {\n    return this.boundedHeight / 2;\n  }\n\n  get translateBounds() {\n    return `translate(${this.left}px, ${this.top}px)`;\n  }\n\n  get tranlateXAxisBottom() {\n    return `translateY(${this.boundedHeight}px`;\n  }\n\n  /**\n   * Creates Wrapper and Bounds nodes\n   */\n  createWrapperAndBounds(wrapperSelector) {\n    this.selectWrapper(wrapperSelector);\n    this.appendBounds();\n\n    return this.wrapper;\n  }\n\n  selectWrapper(wrapperSelector: string) {\n    this.wrapper = select(wrapperSelector)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendWrapper(selection: Selection) {\n    this.wrapper = selection\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendBounds() {\n    this.bounds = this.wrapper.append('g')\n      .style('transform', this.translateBounds);\n\n    return this.bounds;\n  }\n\n  translateToolTip(x, y) {\n    x = x + this._dimensions.margin.left;\n    y = y + this._dimensions.margin.right;\n    return `translate(\n            calc( -50% + ${x}px),\n            calc(-100% + ${y}px)\n        )`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IxD3Layout.html":{"url":"classes/IxD3Layout.html","title":"class - IxD3Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IxD3Layout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/d3/src/lib/d3.layout.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _dimensions\n                            \n                            \n                                atLeast\n                            \n                            \n                                bounds\n                            \n                            \n                                wrapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendBounds\n                            \n                            \n                                appendWrapper\n                            \n                            \n                                createWrapperAndBounds\n                            \n                            \n                                selectWrapper\n                            \n                            \n                                translateToolTip\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    top\n                                \n                                \n                                    right\n                                \n                                \n                                    bottom\n                                \n                                \n                                    left\n                                \n                                \n                                    boundedWidth\n                                \n                                \n                                    centerBoundedWidth\n                                \n                                \n                                    boundedHeight\n                                \n                                \n                                    centerBoundedHeight\n                                \n                                \n                                    translateBounds\n                                \n                                \n                                    tranlateXAxisBottom\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dim: IxD3CanvasDimension)\n                    \n                \n                        \n                            \n                                Defined in libs/d3/src/lib/d3.layout.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dim\n                                                  \n                                                        \n                                                                        IxD3CanvasDimension\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _dimensions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IxD3CanvasDimension\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    width: 0,\n    height: 0,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/d3/src/lib/d3.layout.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atLeast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : atLeast(0)\n                        \n                    \n                        \n                            \n                                    Defined in libs/d3/src/lib/d3.layout.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in libs/d3/src/lib/d3.layout.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in libs/d3/src/lib/d3.layout.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendBounds\n                        \n                        \n                    \n                \n            \n            \n                \nappendBounds()\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.layout.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendWrapper\n                        \n                        \n                    \n                \n            \n            \n                \nappendWrapper(selection: Selection)\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.layout.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWrapperAndBounds\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWrapperAndBounds(wrapperSelector)\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.layout.ts:129\n                \n            \n\n\n            \n                \n                    Creates Wrapper and Bounds nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapperSelector\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectWrapper\n                        \n                        \n                    \n                \n            \n            \n                \nselectWrapper(wrapperSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.layout.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapperSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translateToolTip\n                        \n                        \n                    \n                \n            \n            \n                \ntranslateToolTip(x, y)\n                \n            \n\n\n            \n                \n                    Defined in libs/d3/src/lib/d3.layout.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:45\n                                \n                            \n\n                \n                    \n                        setwidth(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:53\n                                \n                            \n\n                \n                    \n                        setheight(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:61\n                                \n                            \n\n                \n                    \n                        settop(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        right\n                    \n                \n\n                \n                    \n                        getright()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:69\n                                \n                            \n\n                \n                    \n                        setright(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n\n                \n                    \n                        getbottom()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:77\n                                \n                            \n\n                \n                    \n                        setbottom(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:81\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:85\n                                \n                            \n\n                \n                    \n                        setleft(val)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:89\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        boundedWidth\n                    \n                \n\n                \n                    \n                        getboundedWidth()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        centerBoundedWidth\n                    \n                \n\n                \n                    \n                        getcenterBoundedWidth()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        boundedHeight\n                    \n                \n\n                \n                    \n                        getboundedHeight()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:103\n                                \n                            \n\n                \n                    \n                        setboundedHeight(boundedHeight)\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:109\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundedHeight\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        centerBoundedHeight\n                    \n                \n\n                \n                    \n                        getcenterBoundedHeight()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        translateBounds\n                    \n                \n\n                \n                    \n                        gettranslateBounds()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:118\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tranlateXAxisBottom\n                    \n                \n\n                \n                    \n                        gettranlateXAxisBottom()\n                    \n                \n                            \n                                \n                                    Defined in libs/d3/src/lib/d3.layout.ts:122\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { hasValue, ternary, atLeast } from '@uiux/fn';\nimport { select, Selection } from 'd3-selection';\n\nexport interface IxD3CanvasMargins {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport interface IxD3CanvasDimension {\n  width: number;\n  height: number;\n  margin: IxD3CanvasMargins;\n}\n\nexport class IxD3Layout {\n  _dimensions: IxD3CanvasDimension = {\n    width: 0,\n    height: 0,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  };\n\n  wrapper = null;\n  bounds = null;\n\n  atLeast: (val) => number = atLeast(0);\n\n  constructor(dim: IxD3CanvasDimension) {\n    if (dim) {\n      this._dimensions.width = this.atLeast(dim.width);\n      this._dimensions.height = this.atLeast(dim.height);\n      this._dimensions.margin.top = this.atLeast(dim.margin.top);\n      this._dimensions.margin.right = this.atLeast(dim.margin.right);\n      this._dimensions.margin.bottom = this.atLeast(dim.margin.bottom);\n      this._dimensions.margin.left = this.atLeast(dim.margin.left);\n    }\n  }\n\n  get width() {\n    return this._dimensions.width;\n  }\n\n  set width(val) {\n    this._dimensions.width = val;\n  }\n\n  get height() {\n    return this._dimensions.height;\n  }\n\n  set height(val) {\n    this._dimensions.height = val;\n  }\n\n  get top() {\n    return this._dimensions.margin.top;\n  }\n\n  set top(val) {\n    this._dimensions.margin.top = val;\n  }\n\n  get right() {\n    return this._dimensions.margin.right;\n  }\n\n  set right(val) {\n    this._dimensions.margin.right = val;\n  }\n\n  get bottom() {\n    return this._dimensions.margin.bottom;\n  }\n\n  set bottom(val) {\n    this._dimensions.margin.bottom = val;\n  }\n\n  get left() {\n    return this._dimensions.margin.left;\n  }\n\n  set left(val) {\n    this._dimensions.margin.left = val;\n  }\n\n  get boundedWidth() {\n    return this._dimensions.width\n      - this._dimensions.margin.left\n      - this._dimensions.margin.right;\n  }\n\n  get centerBoundedWidth() {\n    return this.boundedWidth / 2;\n  }\n\n  get boundedHeight() {\n    return this._dimensions.height\n      - this._dimensions.margin.top\n      - this._dimensions.margin.bottom;\n  }\n\n  set boundedHeight(boundedHeight) {\n    this._dimensions.height =\n      boundedHeight + this._dimensions.margin.top + this._dimensions.margin.bottom;\n  }\n\n  get centerBoundedHeight() {\n    return this.boundedHeight / 2;\n  }\n\n  get translateBounds() {\n    return `translate(${this.left}px, ${this.top}px)`;\n  }\n\n  get tranlateXAxisBottom() {\n    return `translateY(${this.boundedHeight}px`;\n  }\n\n  /**\n   * Creates Wrapper and Bounds nodes\n   */\n  createWrapperAndBounds(wrapperSelector) {\n    this.selectWrapper(wrapperSelector);\n    this.appendBounds();\n\n    return this.wrapper;\n  }\n\n  selectWrapper(wrapperSelector: string) {\n    this.wrapper = select(wrapperSelector)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendWrapper(selection: Selection) {\n    this.wrapper = selection\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    return this.wrapper;\n  }\n\n  appendBounds() {\n    this.bounds = this.wrapper.append('g')\n      .style('transform', this.translateBounds);\n\n    return this.bounds;\n  }\n\n  translateToolTip(x, y) {\n    x = x + this._dimensions.margin.left;\n    y = y + this._dimensions.margin.right;\n    return `translate(\n            calc( -50% + ${x}px),\n            calc(-100% + ${y}px)\n        )`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/d3/src/lib/d3.component.ts\n            \n            component\n            D3Component\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/d3/src/lib/d3.layout.ts\n            \n            class\n            IxD3Layout\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                libs/d3/src/lib/d3.layout.ts\n            \n            interface\n            IxD3CanvasDimension\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/d3/src/lib/d3.layout.ts\n            \n            interface\n            IxD3CanvasMargins\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/d3/src/lib/d3.service.ts\n            \n            injectable\n            D3Service\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.0\n        \n            @angular/cdk : ~8.1.2\n        \n            @angular/common : ^8.0.0\n        \n            @angular/compiler : ^8.0.0\n        \n            @angular/core : ^8.0.0\n        \n            @angular/forms : ^8.0.0\n        \n            @angular/material : ^8.1.2\n        \n            @angular/platform-browser : ^8.0.0\n        \n            @angular/platform-browser-dynamic : ^8.0.0\n        \n            @angular/router : ^8.0.0\n        \n            @nrwl/schematics : ^8.4.4\n        \n            core-js : ^2.5.4\n        \n            d3-selection : ^1.4.0\n        \n            firebase : ^6.3.5\n        \n            firebaseui : ^4.1.0\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSemver\nUse yarn commands to increments the version of project. This will update package.json files in the CDK, Material, Icons, Docs App, and assets folder.\nThe package.json at the root of this repo contains the version which incrementing semver is based.\nIf the root package.json version is 6.2.3:\nyarn run bump --ver=8.0.1 updates version to 8.0.1yarn bump.major updates version to 7.0.0yarn bump.minor updates version to 6.3.0yarn bump.patch updates version to 6.2.4    \nBumping alpha, beta, and rc only appends or increments the current version with something like -rc.1, -alpha.1, or -beta.1. If you want to increment the major, minor, or patch versions as well, run those commands first.\nyarn bump.alpha updates version to 6.2.3-alpha.1yarn bump.beta updates version to 6.2.3-beta.1yarn bump.rc updates version to 6.2.3-rc.1    \nReleasing Projects\nI have tried to automate this process with a script, but my two-factor authentication token for GitHub is not recognized when running npm publish inside of a script. Any help is appreciated.\n\nBump semver.\n\nBuild projects by runing yarn build.projects.\n\nIn the dist/ path, cd into each project's directory containing it's package.json file, \nand run npm publish. Do not do this for the Icon's directory.\n cd ./dist/@uiux/cdk\n npm publish\n\n cd ./dist/@uiux/material\n npm publish\n\n cd ./projects/uiux/icons\n npm publish\n\n\nIxUtilities\nThis project was generated using Nx.\n\n\n&#x1F50E; Nx is a set of Extensible Dev Tools for Monorepos.\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are some plugins which you can add to your workspace:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are sharable across libraries and applications. They can be imported from @ix-utilities/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        D3Module\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

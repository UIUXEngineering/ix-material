// TODO(kara): update vars for desktop when MD team responds
@import '../../src/lib/core/style/button-common';
@import '../../src/lib/core/style/layout-common';
@import '../../src/lib/core/style/menu-common';
@import '../../src/lib/core/style/layout-common';
@import '../../src/lib/core/style/a11y';

$ix-menu-vertical-padding: 8px !default;
$ix-menu-border-radius: 4px !default;
$ix-menu-submenu-indicator-size: 10px !default;

.ix-menu-panel {
  @include ix-menu-base();
  max-height: calc(100vh - #{$ix-menu-item-height});
  border-radius: $ix-menu-border-radius;
  outline: 0;

  // Give the menu a minimum height so that the user can't
  // collapse it to zero when they scroll away.
  min-height: $ix-menu-item-height + $ix-menu-vertical-padding * 2;

  // Prevent users from interacting with the panel while it's animating. Note that
  // people won't be able to click through it, because the overlay pane will catch the click.
  // This fixes the following issues:
  //  * Users accidentally opening sub-menus when the `overlapTrigger` option is enabled.
  //  * Users accidentally tapping on content inside the sub-menu on touch devices, if the
  //    sub-menu overlaps the trigger. The issue is due to touch devices emulating the
  //    `mouseenter` event by dispatching it on tap.
  &.ng-animating {
    pointer-events: none;
  }

  @include cdk-high-contrast {
    outline: solid 1px;
  }
}

// `:not(:empty)` allows for the menu to collapse to 0x0 when it doesn't have content.
.ix-menu-content:not(:empty) {
  padding-top: $ix-menu-vertical-padding;
  padding-bottom: $ix-menu-vertical-padding;
}

.ix-menu-item {
  @include mat-button-reset();
  @include ix-menu-item-base();
  position: relative;

  @include cdk-high-contrast {
    &.cdk-program-focused,
    &.cdk-keyboard-focused,
    &-highlighted {
      outline: dotted 1px;
    }
  }
}

.ix-menu-item-submenu-trigger {
  @include ix-menu-item-submenu-trigger($ix-menu-side-padding);
}

button.ix-menu-item {
  width: 100%;
}

// Increase specificity because ripple styles are part of the `mat-core` mixin and can
// potentially overwrite the absolute position of the container.
.ix-menu-item .ix-menu-ripple {
  @include ix-menu-item-ripple;
}
